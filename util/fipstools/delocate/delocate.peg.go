package main

// Code generated by /Users/shanggu/workplace/github/peg/peg delocate.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleAsmFile
	ruleStatement
	ruleGlobalDirective
	ruleDirective
	ruleDirectiveName
	ruleLocationDirective
	ruleFileDirective
	ruleLocDirective
	ruleArgs
	ruleArg
	ruleQuotedArg
	ruleQuotedText
	ruleLabelContainingDirective
	ruleLabelContainingDirectiveName
	ruleSymbolArgs
	ruleSymbolArg
	ruleSymbolType
	ruleDot
	ruleTCMarker
	ruleEscapedChar
	ruleWS
	ruleComment
	ruleLabel
	ruleSymbolName
	ruleLocalSymbol
	ruleLocalLabel
	ruleLocalLabelRef
	ruleInstruction
	ruleInstructionName
	ruleInstructionArg
	ruleGOTLocation
	ruleGOTSymbolOffset
	ruleAVX512Token
	ruleTOCRefHigh
	ruleTOCRefLow
	ruleIndirectionIndicator
	ruleRegisterOrConstant
	ruleARMConstantTweak
	ruleARMRegister
	ruleARMVectorRegister
	ruleMemoryRef
	ruleSymbolRef
	ruleLow12BitsSymbolRef
	ruleARMBaseIndexScale
	ruleARMBaseIndexScale898
	ruleOffset331
	ruleOffset666
	ruleARMGOTLow12
	ruleARMPostincrement
	ruleBaseIndexScale
	ruleOperator
	ruleOffset
	ruleSection
	ruleSegmentRegister
)

var rul3s = [...]string{
	"Unknown",
	"AsmFile",
	"Statement",
	"GlobalDirective",
	"Directive",
	"DirectiveName",
	"LocationDirective",
	"FileDirective",
	"LocDirective",
	"Args",
	"Arg",
	"QuotedArg",
	"QuotedText",
	"LabelContainingDirective",
	"LabelContainingDirectiveName",
	"SymbolArgs",
	"SymbolArg",
	"SymbolType",
	"Dot",
	"TCMarker",
	"EscapedChar",
	"WS",
	"Comment",
	"Label",
	"SymbolName",
	"LocalSymbol",
	"LocalLabel",
	"LocalLabelRef",
	"Instruction",
	"InstructionName",
	"InstructionArg",
	"GOTLocation",
	"GOTSymbolOffset",
	"AVX512Token",
	"TOCRefHigh",
	"TOCRefLow",
	"IndirectionIndicator",
	"RegisterOrConstant",
	"ARMConstantTweak",
	"ARMRegister",
	"ARMVectorRegister",
	"MemoryRef",
	"SymbolRef",
	"Low12BitsSymbolRef",
	"ARMBaseIndexScale",
	"ARMBaseIndexScale898",
	"Offset331",
	"Offset666",
	"ARMGOTLow12",
	"ARMPostincrement",
	"BaseIndexScale",
	"Operator",
	"Offset",
	"Section",
	"SegmentRegister",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Asm struct {
	Buffer string
	buffer []rune
	rules  [55]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Asm) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Asm) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Asm
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Asm) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Asm) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Asm) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Asm) error {
	return func(p *Asm) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Asm) error {
	return func(p *Asm) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Asm) Init(options ...func(*Asm) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 AsmFile <- <(Statement* !.)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleStatement]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				{
					position4, tokenIndex4 := position, tokenIndex
					if !matchDot() {
						goto l4
					}
					goto l0
				l4:
					position, tokenIndex = position4, tokenIndex4
				}
				add(ruleAsmFile, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Statement <- <(WS? (Label / (('a' / 'A') ('d' / 'D') ('d' / 'D') ' ' ('s' / 'S') ('p' / 'P') ',' ('s' / 'S') ('p' / 'P') ',' '#' '3' '2' '*' '(' '1' '2' '-' '4' ')' '\n') / ((GlobalDirective / LocationDirective / LabelContainingDirective / Instruction / Directive / Comment / ) WS? ((Comment? '\n') / ';'))))> */
		func() bool {
			position5, tokenIndex5 := position, tokenIndex
			{
				position6 := position
				{
					position7, tokenIndex7 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l7
					}
					goto l8
				l7:
					position, tokenIndex = position7, tokenIndex7
				}
			l8:
				{
					position9, tokenIndex9 := position, tokenIndex
					if !_rules[ruleLabel]() {
						goto l10
					}
					goto l9
				l10:
					position, tokenIndex = position9, tokenIndex9
					{
						position12, tokenIndex12 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l13
						}
						position++
						goto l12
					l13:
						position, tokenIndex = position12, tokenIndex12
						if buffer[position] != rune('A') {
							goto l11
						}
						position++
					}
				l12:
					{
						position14, tokenIndex14 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l15
						}
						position++
						goto l14
					l15:
						position, tokenIndex = position14, tokenIndex14
						if buffer[position] != rune('D') {
							goto l11
						}
						position++
					}
				l14:
					{
						position16, tokenIndex16 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l17
						}
						position++
						goto l16
					l17:
						position, tokenIndex = position16, tokenIndex16
						if buffer[position] != rune('D') {
							goto l11
						}
						position++
					}
				l16:
					if buffer[position] != rune(' ') {
						goto l11
					}
					position++
					{
						position18, tokenIndex18 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l19
						}
						position++
						goto l18
					l19:
						position, tokenIndex = position18, tokenIndex18
						if buffer[position] != rune('S') {
							goto l11
						}
						position++
					}
				l18:
					{
						position20, tokenIndex20 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l21
						}
						position++
						goto l20
					l21:
						position, tokenIndex = position20, tokenIndex20
						if buffer[position] != rune('P') {
							goto l11
						}
						position++
					}
				l20:
					if buffer[position] != rune(',') {
						goto l11
					}
					position++
					{
						position22, tokenIndex22 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l23
						}
						position++
						goto l22
					l23:
						position, tokenIndex = position22, tokenIndex22
						if buffer[position] != rune('S') {
							goto l11
						}
						position++
					}
				l22:
					{
						position24, tokenIndex24 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l25
						}
						position++
						goto l24
					l25:
						position, tokenIndex = position24, tokenIndex24
						if buffer[position] != rune('P') {
							goto l11
						}
						position++
					}
				l24:
					if buffer[position] != rune(',') {
						goto l11
					}
					position++
					if buffer[position] != rune('#') {
						goto l11
					}
					position++
					if buffer[position] != rune('3') {
						goto l11
					}
					position++
					if buffer[position] != rune('2') {
						goto l11
					}
					position++
					if buffer[position] != rune('*') {
						goto l11
					}
					position++
					if buffer[position] != rune('(') {
						goto l11
					}
					position++
					if buffer[position] != rune('1') {
						goto l11
					}
					position++
					if buffer[position] != rune('2') {
						goto l11
					}
					position++
					if buffer[position] != rune('-') {
						goto l11
					}
					position++
					if buffer[position] != rune('4') {
						goto l11
					}
					position++
					if buffer[position] != rune(')') {
						goto l11
					}
					position++
					if buffer[position] != rune('\n') {
						goto l11
					}
					position++
					goto l9
				l11:
					position, tokenIndex = position9, tokenIndex9
					{
						position26, tokenIndex26 := position, tokenIndex
						if !_rules[ruleGlobalDirective]() {
							goto l27
						}
						goto l26
					l27:
						position, tokenIndex = position26, tokenIndex26
						if !_rules[ruleLocationDirective]() {
							goto l28
						}
						goto l26
					l28:
						position, tokenIndex = position26, tokenIndex26
						if !_rules[ruleLabelContainingDirective]() {
							goto l29
						}
						goto l26
					l29:
						position, tokenIndex = position26, tokenIndex26
						if !_rules[ruleInstruction]() {
							goto l30
						}
						goto l26
					l30:
						position, tokenIndex = position26, tokenIndex26
						if !_rules[ruleDirective]() {
							goto l31
						}
						goto l26
					l31:
						position, tokenIndex = position26, tokenIndex26
						if !_rules[ruleComment]() {
							goto l32
						}
						goto l26
					l32:
						position, tokenIndex = position26, tokenIndex26
					}
				l26:
					{
						position33, tokenIndex33 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l33
						}
						goto l34
					l33:
						position, tokenIndex = position33, tokenIndex33
					}
				l34:
					{
						position35, tokenIndex35 := position, tokenIndex
						{
							position37, tokenIndex37 := position, tokenIndex
							if !_rules[ruleComment]() {
								goto l37
							}
							goto l38
						l37:
							position, tokenIndex = position37, tokenIndex37
						}
					l38:
						if buffer[position] != rune('\n') {
							goto l36
						}
						position++
						goto l35
					l36:
						position, tokenIndex = position35, tokenIndex35
						if buffer[position] != rune(';') {
							goto l5
						}
						position++
					}
				l35:
				}
			l9:
				add(ruleStatement, position6)
			}
			return true
		l5:
			position, tokenIndex = position5, tokenIndex5
			return false
		},
		/* 2 GlobalDirective <- <((('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('a' / 'A') ('l' / 'L')) / ('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('l' / 'L'))) WS SymbolName)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				{
					position41, tokenIndex41 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l42
					}
					position++
					{
						position43, tokenIndex43 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l44
						}
						position++
						goto l43
					l44:
						position, tokenIndex = position43, tokenIndex43
						if buffer[position] != rune('G') {
							goto l42
						}
						position++
					}
				l43:
					{
						position45, tokenIndex45 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l46
						}
						position++
						goto l45
					l46:
						position, tokenIndex = position45, tokenIndex45
						if buffer[position] != rune('L') {
							goto l42
						}
						position++
					}
				l45:
					{
						position47, tokenIndex47 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l48
						}
						position++
						goto l47
					l48:
						position, tokenIndex = position47, tokenIndex47
						if buffer[position] != rune('O') {
							goto l42
						}
						position++
					}
				l47:
					{
						position49, tokenIndex49 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l50
						}
						position++
						goto l49
					l50:
						position, tokenIndex = position49, tokenIndex49
						if buffer[position] != rune('B') {
							goto l42
						}
						position++
					}
				l49:
					{
						position51, tokenIndex51 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l52
						}
						position++
						goto l51
					l52:
						position, tokenIndex = position51, tokenIndex51
						if buffer[position] != rune('A') {
							goto l42
						}
						position++
					}
				l51:
					{
						position53, tokenIndex53 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l54
						}
						position++
						goto l53
					l54:
						position, tokenIndex = position53, tokenIndex53
						if buffer[position] != rune('L') {
							goto l42
						}
						position++
					}
				l53:
					goto l41
				l42:
					position, tokenIndex = position41, tokenIndex41
					if buffer[position] != rune('.') {
						goto l39
					}
					position++
					{
						position55, tokenIndex55 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l56
						}
						position++
						goto l55
					l56:
						position, tokenIndex = position55, tokenIndex55
						if buffer[position] != rune('G') {
							goto l39
						}
						position++
					}
				l55:
					{
						position57, tokenIndex57 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l58
						}
						position++
						goto l57
					l58:
						position, tokenIndex = position57, tokenIndex57
						if buffer[position] != rune('L') {
							goto l39
						}
						position++
					}
				l57:
					{
						position59, tokenIndex59 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l60
						}
						position++
						goto l59
					l60:
						position, tokenIndex = position59, tokenIndex59
						if buffer[position] != rune('O') {
							goto l39
						}
						position++
					}
				l59:
					{
						position61, tokenIndex61 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l62
						}
						position++
						goto l61
					l62:
						position, tokenIndex = position61, tokenIndex61
						if buffer[position] != rune('B') {
							goto l39
						}
						position++
					}
				l61:
					{
						position63, tokenIndex63 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l64
						}
						position++
						goto l63
					l64:
						position, tokenIndex = position63, tokenIndex63
						if buffer[position] != rune('L') {
							goto l39
						}
						position++
					}
				l63:
				}
			l41:
				if !_rules[ruleWS]() {
					goto l39
				}
				if !_rules[ruleSymbolName]() {
					goto l39
				}
				add(ruleGlobalDirective, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 3 Directive <- <('.' DirectiveName (WS Args)?)> */
		func() bool {
			position65, tokenIndex65 := position, tokenIndex
			{
				position66 := position
				if buffer[position] != rune('.') {
					goto l65
				}
				position++
				if !_rules[ruleDirectiveName]() {
					goto l65
				}
				{
					position67, tokenIndex67 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l67
					}
					if !_rules[ruleArgs]() {
						goto l67
					}
					goto l68
				l67:
					position, tokenIndex = position67, tokenIndex67
				}
			l68:
				add(ruleDirective, position66)
			}
			return true
		l65:
			position, tokenIndex = position65, tokenIndex65
			return false
		},
		/* 4 DirectiveName <- <([a-z] / [A-Z] / ([0-9] / [0-9]) / '_')+> */
		func() bool {
			position69, tokenIndex69 := position, tokenIndex
			{
				position70 := position
				{
					position73, tokenIndex73 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l74
					}
					position++
					goto l73
				l74:
					position, tokenIndex = position73, tokenIndex73
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l75
					}
					position++
					goto l73
				l75:
					position, tokenIndex = position73, tokenIndex73
					{
						position77, tokenIndex77 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l78
						}
						position++
						goto l77
					l78:
						position, tokenIndex = position77, tokenIndex77
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l76
						}
						position++
					}
				l77:
					goto l73
				l76:
					position, tokenIndex = position73, tokenIndex73
					if buffer[position] != rune('_') {
						goto l69
					}
					position++
				}
			l73:
			l71:
				{
					position72, tokenIndex72 := position, tokenIndex
					{
						position79, tokenIndex79 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l80
						}
						position++
						goto l79
					l80:
						position, tokenIndex = position79, tokenIndex79
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l81
						}
						position++
						goto l79
					l81:
						position, tokenIndex = position79, tokenIndex79
						{
							position83, tokenIndex83 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l84
							}
							position++
							goto l83
						l84:
							position, tokenIndex = position83, tokenIndex83
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l82
							}
							position++
						}
					l83:
						goto l79
					l82:
						position, tokenIndex = position79, tokenIndex79
						if buffer[position] != rune('_') {
							goto l72
						}
						position++
					}
				l79:
					goto l71
				l72:
					position, tokenIndex = position72, tokenIndex72
				}
				add(ruleDirectiveName, position70)
			}
			return true
		l69:
			position, tokenIndex = position69, tokenIndex69
			return false
		},
		/* 5 LocationDirective <- <(FileDirective / LocDirective)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleFileDirective]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleLocDirective]() {
						goto l85
					}
				}
			l87:
				add(ruleLocationDirective, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 6 FileDirective <- <('.' ('f' / 'F') ('i' / 'I') ('l' / 'L') ('e' / 'E') WS (!('#' / '\n') .)+)> */
		func() bool {
			position89, tokenIndex89 := position, tokenIndex
			{
				position90 := position
				if buffer[position] != rune('.') {
					goto l89
				}
				position++
				{
					position91, tokenIndex91 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l92
					}
					position++
					goto l91
				l92:
					position, tokenIndex = position91, tokenIndex91
					if buffer[position] != rune('F') {
						goto l89
					}
					position++
				}
			l91:
				{
					position93, tokenIndex93 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l94
					}
					position++
					goto l93
				l94:
					position, tokenIndex = position93, tokenIndex93
					if buffer[position] != rune('I') {
						goto l89
					}
					position++
				}
			l93:
				{
					position95, tokenIndex95 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l96
					}
					position++
					goto l95
				l96:
					position, tokenIndex = position95, tokenIndex95
					if buffer[position] != rune('L') {
						goto l89
					}
					position++
				}
			l95:
				{
					position97, tokenIndex97 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l98
					}
					position++
					goto l97
				l98:
					position, tokenIndex = position97, tokenIndex97
					if buffer[position] != rune('E') {
						goto l89
					}
					position++
				}
			l97:
				if !_rules[ruleWS]() {
					goto l89
				}
				{
					position101, tokenIndex101 := position, tokenIndex
					{
						position102, tokenIndex102 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l103
						}
						position++
						goto l102
					l103:
						position, tokenIndex = position102, tokenIndex102
						if buffer[position] != rune('\n') {
							goto l101
						}
						position++
					}
				l102:
					goto l89
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
				if !matchDot() {
					goto l89
				}
			l99:
				{
					position100, tokenIndex100 := position, tokenIndex
					{
						position104, tokenIndex104 := position, tokenIndex
						{
							position105, tokenIndex105 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l106
							}
							position++
							goto l105
						l106:
							position, tokenIndex = position105, tokenIndex105
							if buffer[position] != rune('\n') {
								goto l104
							}
							position++
						}
					l105:
						goto l100
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
					if !matchDot() {
						goto l100
					}
					goto l99
				l100:
					position, tokenIndex = position100, tokenIndex100
				}
				add(ruleFileDirective, position90)
			}
			return true
		l89:
			position, tokenIndex = position89, tokenIndex89
			return false
		},
		/* 7 LocDirective <- <('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') WS (!('#' / '/' / '\n') .)+)> */
		func() bool {
			position107, tokenIndex107 := position, tokenIndex
			{
				position108 := position
				if buffer[position] != rune('.') {
					goto l107
				}
				position++
				{
					position109, tokenIndex109 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l110
					}
					position++
					goto l109
				l110:
					position, tokenIndex = position109, tokenIndex109
					if buffer[position] != rune('L') {
						goto l107
					}
					position++
				}
			l109:
				{
					position111, tokenIndex111 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l112
					}
					position++
					goto l111
				l112:
					position, tokenIndex = position111, tokenIndex111
					if buffer[position] != rune('O') {
						goto l107
					}
					position++
				}
			l111:
				{
					position113, tokenIndex113 := position, tokenIndex
					if buffer[position] != rune('c') {
						goto l114
					}
					position++
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if buffer[position] != rune('C') {
						goto l107
					}
					position++
				}
			l113:
				if !_rules[ruleWS]() {
					goto l107
				}
				{
					position117, tokenIndex117 := position, tokenIndex
					{
						position118, tokenIndex118 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l119
						}
						position++
						goto l118
					l119:
						position, tokenIndex = position118, tokenIndex118
						if buffer[position] != rune('/') {
							goto l120
						}
						position++
						goto l118
					l120:
						position, tokenIndex = position118, tokenIndex118
						if buffer[position] != rune('\n') {
							goto l117
						}
						position++
					}
				l118:
					goto l107
				l117:
					position, tokenIndex = position117, tokenIndex117
				}
				if !matchDot() {
					goto l107
				}
			l115:
				{
					position116, tokenIndex116 := position, tokenIndex
					{
						position121, tokenIndex121 := position, tokenIndex
						{
							position122, tokenIndex122 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l123
							}
							position++
							goto l122
						l123:
							position, tokenIndex = position122, tokenIndex122
							if buffer[position] != rune('/') {
								goto l124
							}
							position++
							goto l122
						l124:
							position, tokenIndex = position122, tokenIndex122
							if buffer[position] != rune('\n') {
								goto l121
							}
							position++
						}
					l122:
						goto l116
					l121:
						position, tokenIndex = position121, tokenIndex121
					}
					if !matchDot() {
						goto l116
					}
					goto l115
				l116:
					position, tokenIndex = position116, tokenIndex116
				}
				add(ruleLocDirective, position108)
			}
			return true
		l107:
			position, tokenIndex = position107, tokenIndex107
			return false
		},
		/* 8 Args <- <(Arg (WS? ',' WS? Arg)*)> */
		func() bool {
			position125, tokenIndex125 := position, tokenIndex
			{
				position126 := position
				if !_rules[ruleArg]() {
					goto l125
				}
			l127:
				{
					position128, tokenIndex128 := position, tokenIndex
					{
						position129, tokenIndex129 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l129
						}
						goto l130
					l129:
						position, tokenIndex = position129, tokenIndex129
					}
				l130:
					if buffer[position] != rune(',') {
						goto l128
					}
					position++
					{
						position131, tokenIndex131 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l131
						}
						goto l132
					l131:
						position, tokenIndex = position131, tokenIndex131
					}
				l132:
					if !_rules[ruleArg]() {
						goto l128
					}
					goto l127
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
				add(ruleArgs, position126)
			}
			return true
		l125:
			position, tokenIndex = position125, tokenIndex125
			return false
		},
		/* 9 Arg <- <(QuotedArg / ([0-9] / [0-9] / ([a-z] / [A-Z]) / '%' / '+' / '-' / '*' / '_' / '@' / '.')*)> */
		func() bool {
			{
				position134 := position
				{
					position135, tokenIndex135 := position, tokenIndex
					if !_rules[ruleQuotedArg]() {
						goto l136
					}
					goto l135
				l136:
					position, tokenIndex = position135, tokenIndex135
				l137:
					{
						position138, tokenIndex138 := position, tokenIndex
						{
							position139, tokenIndex139 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l140
							}
							position++
							goto l139
						l140:
							position, tokenIndex = position139, tokenIndex139
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l141
							}
							position++
							goto l139
						l141:
							position, tokenIndex = position139, tokenIndex139
							{
								position143, tokenIndex143 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l144
								}
								position++
								goto l143
							l144:
								position, tokenIndex = position143, tokenIndex143
								if c := buffer[position]; c < rune('A') || c > rune('Z') {
									goto l142
								}
								position++
							}
						l143:
							goto l139
						l142:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('%') {
								goto l145
							}
							position++
							goto l139
						l145:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('+') {
								goto l146
							}
							position++
							goto l139
						l146:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('-') {
								goto l147
							}
							position++
							goto l139
						l147:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('*') {
								goto l148
							}
							position++
							goto l139
						l148:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('_') {
								goto l149
							}
							position++
							goto l139
						l149:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('@') {
								goto l150
							}
							position++
							goto l139
						l150:
							position, tokenIndex = position139, tokenIndex139
							if buffer[position] != rune('.') {
								goto l138
							}
							position++
						}
					l139:
						goto l137
					l138:
						position, tokenIndex = position138, tokenIndex138
					}
				}
			l135:
				add(ruleArg, position134)
			}
			return true
		},
		/* 10 QuotedArg <- <('"' QuotedText '"')> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				if buffer[position] != rune('"') {
					goto l151
				}
				position++
				if !_rules[ruleQuotedText]() {
					goto l151
				}
				if buffer[position] != rune('"') {
					goto l151
				}
				position++
				add(ruleQuotedArg, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 11 QuotedText <- <(EscapedChar / (!'"' .))*> */
		func() bool {
			{
				position154 := position
			l155:
				{
					position156, tokenIndex156 := position, tokenIndex
					{
						position157, tokenIndex157 := position, tokenIndex
						if !_rules[ruleEscapedChar]() {
							goto l158
						}
						goto l157
					l158:
						position, tokenIndex = position157, tokenIndex157
						{
							position159, tokenIndex159 := position, tokenIndex
							if buffer[position] != rune('"') {
								goto l159
							}
							position++
							goto l156
						l159:
							position, tokenIndex = position159, tokenIndex159
						}
						if !matchDot() {
							goto l156
						}
					}
				l157:
					goto l155
				l156:
					position, tokenIndex = position156, tokenIndex156
				}
				add(ruleQuotedText, position154)
			}
			return true
		},
		/* 12 LabelContainingDirective <- <(LabelContainingDirectiveName WS SymbolArgs)> */
		func() bool {
			position160, tokenIndex160 := position, tokenIndex
			{
				position161 := position
				if !_rules[ruleLabelContainingDirectiveName]() {
					goto l160
				}
				if !_rules[ruleWS]() {
					goto l160
				}
				if !_rules[ruleSymbolArgs]() {
					goto l160
				}
				add(ruleLabelContainingDirective, position161)
			}
			return true
		l160:
			position, tokenIndex = position160, tokenIndex160
			return false
		},
		/* 13 LabelContainingDirectiveName <- <(('.' ('x' / 'X') ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('l' / 'L') ('o' / 'O') ('n' / 'N') ('g' / 'G')) / ('.' ('s' / 'S') ('e' / 'E') ('t' / 'T')) / ('.' '8' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '4' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' ('q' / 'Q') ('u' / 'U') ('a' / 'A') ('d' / 'D')) / ('.' ('t' / 'T') ('c' / 'C')) / ('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') ('a' / 'A') ('l' / 'L') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('r' / 'R') ('y' / 'Y')) / ('.' ('s' / 'S') ('i' / 'I') ('z' / 'Z') ('e' / 'E')) / ('.' ('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')) / ('.' ('u' / 'U') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8') / ('.' ('s' / 'S') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8'))> */
		func() bool {
			position162, tokenIndex162 := position, tokenIndex
			{
				position163 := position
				{
					position164, tokenIndex164 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l165
					}
					position++
					{
						position166, tokenIndex166 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l167
						}
						position++
						goto l166
					l167:
						position, tokenIndex = position166, tokenIndex166
						if buffer[position] != rune('X') {
							goto l165
						}
						position++
					}
				l166:
					{
						position168, tokenIndex168 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l169
						}
						position++
						goto l168
					l169:
						position, tokenIndex = position168, tokenIndex168
						if buffer[position] != rune('W') {
							goto l165
						}
						position++
					}
				l168:
					{
						position170, tokenIndex170 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l171
						}
						position++
						goto l170
					l171:
						position, tokenIndex = position170, tokenIndex170
						if buffer[position] != rune('O') {
							goto l165
						}
						position++
					}
				l170:
					{
						position172, tokenIndex172 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l173
						}
						position++
						goto l172
					l173:
						position, tokenIndex = position172, tokenIndex172
						if buffer[position] != rune('R') {
							goto l165
						}
						position++
					}
				l172:
					{
						position174, tokenIndex174 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l175
						}
						position++
						goto l174
					l175:
						position, tokenIndex = position174, tokenIndex174
						if buffer[position] != rune('D') {
							goto l165
						}
						position++
					}
				l174:
					goto l164
				l165:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l176
					}
					position++
					{
						position177, tokenIndex177 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l178
						}
						position++
						goto l177
					l178:
						position, tokenIndex = position177, tokenIndex177
						if buffer[position] != rune('W') {
							goto l176
						}
						position++
					}
				l177:
					{
						position179, tokenIndex179 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l180
						}
						position++
						goto l179
					l180:
						position, tokenIndex = position179, tokenIndex179
						if buffer[position] != rune('O') {
							goto l176
						}
						position++
					}
				l179:
					{
						position181, tokenIndex181 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l182
						}
						position++
						goto l181
					l182:
						position, tokenIndex = position181, tokenIndex181
						if buffer[position] != rune('R') {
							goto l176
						}
						position++
					}
				l181:
					{
						position183, tokenIndex183 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l184
						}
						position++
						goto l183
					l184:
						position, tokenIndex = position183, tokenIndex183
						if buffer[position] != rune('D') {
							goto l176
						}
						position++
					}
				l183:
					goto l164
				l176:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l185
					}
					position++
					{
						position186, tokenIndex186 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l187
						}
						position++
						goto l186
					l187:
						position, tokenIndex = position186, tokenIndex186
						if buffer[position] != rune('L') {
							goto l185
						}
						position++
					}
				l186:
					{
						position188, tokenIndex188 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l189
						}
						position++
						goto l188
					l189:
						position, tokenIndex = position188, tokenIndex188
						if buffer[position] != rune('O') {
							goto l185
						}
						position++
					}
				l188:
					{
						position190, tokenIndex190 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l191
						}
						position++
						goto l190
					l191:
						position, tokenIndex = position190, tokenIndex190
						if buffer[position] != rune('N') {
							goto l185
						}
						position++
					}
				l190:
					{
						position192, tokenIndex192 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l193
						}
						position++
						goto l192
					l193:
						position, tokenIndex = position192, tokenIndex192
						if buffer[position] != rune('G') {
							goto l185
						}
						position++
					}
				l192:
					goto l164
				l185:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l194
					}
					position++
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('S') {
							goto l194
						}
						position++
					}
				l195:
					{
						position197, tokenIndex197 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l198
						}
						position++
						goto l197
					l198:
						position, tokenIndex = position197, tokenIndex197
						if buffer[position] != rune('E') {
							goto l194
						}
						position++
					}
				l197:
					{
						position199, tokenIndex199 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l200
						}
						position++
						goto l199
					l200:
						position, tokenIndex = position199, tokenIndex199
						if buffer[position] != rune('T') {
							goto l194
						}
						position++
					}
				l199:
					goto l164
				l194:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l201
					}
					position++
					if buffer[position] != rune('8') {
						goto l201
					}
					position++
					{
						position202, tokenIndex202 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l203
						}
						position++
						goto l202
					l203:
						position, tokenIndex = position202, tokenIndex202
						if buffer[position] != rune('B') {
							goto l201
						}
						position++
					}
				l202:
					{
						position204, tokenIndex204 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l205
						}
						position++
						goto l204
					l205:
						position, tokenIndex = position204, tokenIndex204
						if buffer[position] != rune('Y') {
							goto l201
						}
						position++
					}
				l204:
					{
						position206, tokenIndex206 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l207
						}
						position++
						goto l206
					l207:
						position, tokenIndex = position206, tokenIndex206
						if buffer[position] != rune('T') {
							goto l201
						}
						position++
					}
				l206:
					{
						position208, tokenIndex208 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l209
						}
						position++
						goto l208
					l209:
						position, tokenIndex = position208, tokenIndex208
						if buffer[position] != rune('E') {
							goto l201
						}
						position++
					}
				l208:
					goto l164
				l201:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l210
					}
					position++
					if buffer[position] != rune('4') {
						goto l210
					}
					position++
					{
						position211, tokenIndex211 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l212
						}
						position++
						goto l211
					l212:
						position, tokenIndex = position211, tokenIndex211
						if buffer[position] != rune('B') {
							goto l210
						}
						position++
					}
				l211:
					{
						position213, tokenIndex213 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l214
						}
						position++
						goto l213
					l214:
						position, tokenIndex = position213, tokenIndex213
						if buffer[position] != rune('Y') {
							goto l210
						}
						position++
					}
				l213:
					{
						position215, tokenIndex215 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l216
						}
						position++
						goto l215
					l216:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('T') {
							goto l210
						}
						position++
					}
				l215:
					{
						position217, tokenIndex217 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l218
						}
						position++
						goto l217
					l218:
						position, tokenIndex = position217, tokenIndex217
						if buffer[position] != rune('E') {
							goto l210
						}
						position++
					}
				l217:
					goto l164
				l210:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l219
					}
					position++
					{
						position220, tokenIndex220 := position, tokenIndex
						if buffer[position] != rune('q') {
							goto l221
						}
						position++
						goto l220
					l221:
						position, tokenIndex = position220, tokenIndex220
						if buffer[position] != rune('Q') {
							goto l219
						}
						position++
					}
				l220:
					{
						position222, tokenIndex222 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l223
						}
						position++
						goto l222
					l223:
						position, tokenIndex = position222, tokenIndex222
						if buffer[position] != rune('U') {
							goto l219
						}
						position++
					}
				l222:
					{
						position224, tokenIndex224 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l225
						}
						position++
						goto l224
					l225:
						position, tokenIndex = position224, tokenIndex224
						if buffer[position] != rune('A') {
							goto l219
						}
						position++
					}
				l224:
					{
						position226, tokenIndex226 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l227
						}
						position++
						goto l226
					l227:
						position, tokenIndex = position226, tokenIndex226
						if buffer[position] != rune('D') {
							goto l219
						}
						position++
					}
				l226:
					goto l164
				l219:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l228
					}
					position++
					{
						position229, tokenIndex229 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l230
						}
						position++
						goto l229
					l230:
						position, tokenIndex = position229, tokenIndex229
						if buffer[position] != rune('T') {
							goto l228
						}
						position++
					}
				l229:
					{
						position231, tokenIndex231 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l232
						}
						position++
						goto l231
					l232:
						position, tokenIndex = position231, tokenIndex231
						if buffer[position] != rune('C') {
							goto l228
						}
						position++
					}
				l231:
					goto l164
				l228:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l233
					}
					position++
					{
						position234, tokenIndex234 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l235
						}
						position++
						goto l234
					l235:
						position, tokenIndex = position234, tokenIndex234
						if buffer[position] != rune('L') {
							goto l233
						}
						position++
					}
				l234:
					{
						position236, tokenIndex236 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l237
						}
						position++
						goto l236
					l237:
						position, tokenIndex = position236, tokenIndex236
						if buffer[position] != rune('O') {
							goto l233
						}
						position++
					}
				l236:
					{
						position238, tokenIndex238 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l239
						}
						position++
						goto l238
					l239:
						position, tokenIndex = position238, tokenIndex238
						if buffer[position] != rune('C') {
							goto l233
						}
						position++
					}
				l238:
					{
						position240, tokenIndex240 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l241
						}
						position++
						goto l240
					l241:
						position, tokenIndex = position240, tokenIndex240
						if buffer[position] != rune('A') {
							goto l233
						}
						position++
					}
				l240:
					{
						position242, tokenIndex242 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l243
						}
						position++
						goto l242
					l243:
						position, tokenIndex = position242, tokenIndex242
						if buffer[position] != rune('L') {
							goto l233
						}
						position++
					}
				l242:
					{
						position244, tokenIndex244 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l245
						}
						position++
						goto l244
					l245:
						position, tokenIndex = position244, tokenIndex244
						if buffer[position] != rune('E') {
							goto l233
						}
						position++
					}
				l244:
					{
						position246, tokenIndex246 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l247
						}
						position++
						goto l246
					l247:
						position, tokenIndex = position246, tokenIndex246
						if buffer[position] != rune('N') {
							goto l233
						}
						position++
					}
				l246:
					{
						position248, tokenIndex248 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l249
						}
						position++
						goto l248
					l249:
						position, tokenIndex = position248, tokenIndex248
						if buffer[position] != rune('T') {
							goto l233
						}
						position++
					}
				l248:
					{
						position250, tokenIndex250 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l251
						}
						position++
						goto l250
					l251:
						position, tokenIndex = position250, tokenIndex250
						if buffer[position] != rune('R') {
							goto l233
						}
						position++
					}
				l250:
					{
						position252, tokenIndex252 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l253
						}
						position++
						goto l252
					l253:
						position, tokenIndex = position252, tokenIndex252
						if buffer[position] != rune('Y') {
							goto l233
						}
						position++
					}
				l252:
					goto l164
				l233:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l254
					}
					position++
					{
						position255, tokenIndex255 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l256
						}
						position++
						goto l255
					l256:
						position, tokenIndex = position255, tokenIndex255
						if buffer[position] != rune('S') {
							goto l254
						}
						position++
					}
				l255:
					{
						position257, tokenIndex257 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l258
						}
						position++
						goto l257
					l258:
						position, tokenIndex = position257, tokenIndex257
						if buffer[position] != rune('I') {
							goto l254
						}
						position++
					}
				l257:
					{
						position259, tokenIndex259 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l260
						}
						position++
						goto l259
					l260:
						position, tokenIndex = position259, tokenIndex259
						if buffer[position] != rune('Z') {
							goto l254
						}
						position++
					}
				l259:
					{
						position261, tokenIndex261 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l262
						}
						position++
						goto l261
					l262:
						position, tokenIndex = position261, tokenIndex261
						if buffer[position] != rune('E') {
							goto l254
						}
						position++
					}
				l261:
					goto l164
				l254:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l263
					}
					position++
					{
						position264, tokenIndex264 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l265
						}
						position++
						goto l264
					l265:
						position, tokenIndex = position264, tokenIndex264
						if buffer[position] != rune('T') {
							goto l263
						}
						position++
					}
				l264:
					{
						position266, tokenIndex266 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l267
						}
						position++
						goto l266
					l267:
						position, tokenIndex = position266, tokenIndex266
						if buffer[position] != rune('Y') {
							goto l263
						}
						position++
					}
				l266:
					{
						position268, tokenIndex268 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l269
						}
						position++
						goto l268
					l269:
						position, tokenIndex = position268, tokenIndex268
						if buffer[position] != rune('P') {
							goto l263
						}
						position++
					}
				l268:
					{
						position270, tokenIndex270 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l271
						}
						position++
						goto l270
					l271:
						position, tokenIndex = position270, tokenIndex270
						if buffer[position] != rune('E') {
							goto l263
						}
						position++
					}
				l270:
					goto l164
				l263:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l272
					}
					position++
					{
						position273, tokenIndex273 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l274
						}
						position++
						goto l273
					l274:
						position, tokenIndex = position273, tokenIndex273
						if buffer[position] != rune('U') {
							goto l272
						}
						position++
					}
				l273:
					{
						position275, tokenIndex275 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l276
						}
						position++
						goto l275
					l276:
						position, tokenIndex = position275, tokenIndex275
						if buffer[position] != rune('L') {
							goto l272
						}
						position++
					}
				l275:
					{
						position277, tokenIndex277 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l278
						}
						position++
						goto l277
					l278:
						position, tokenIndex = position277, tokenIndex277
						if buffer[position] != rune('E') {
							goto l272
						}
						position++
					}
				l277:
					{
						position279, tokenIndex279 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l280
						}
						position++
						goto l279
					l280:
						position, tokenIndex = position279, tokenIndex279
						if buffer[position] != rune('B') {
							goto l272
						}
						position++
					}
				l279:
					if buffer[position] != rune('1') {
						goto l272
					}
					position++
					if buffer[position] != rune('2') {
						goto l272
					}
					position++
					if buffer[position] != rune('8') {
						goto l272
					}
					position++
					goto l164
				l272:
					position, tokenIndex = position164, tokenIndex164
					if buffer[position] != rune('.') {
						goto l162
					}
					position++
					{
						position281, tokenIndex281 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l282
						}
						position++
						goto l281
					l282:
						position, tokenIndex = position281, tokenIndex281
						if buffer[position] != rune('S') {
							goto l162
						}
						position++
					}
				l281:
					{
						position283, tokenIndex283 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l284
						}
						position++
						goto l283
					l284:
						position, tokenIndex = position283, tokenIndex283
						if buffer[position] != rune('L') {
							goto l162
						}
						position++
					}
				l283:
					{
						position285, tokenIndex285 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l286
						}
						position++
						goto l285
					l286:
						position, tokenIndex = position285, tokenIndex285
						if buffer[position] != rune('E') {
							goto l162
						}
						position++
					}
				l285:
					{
						position287, tokenIndex287 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l288
						}
						position++
						goto l287
					l288:
						position, tokenIndex = position287, tokenIndex287
						if buffer[position] != rune('B') {
							goto l162
						}
						position++
					}
				l287:
					if buffer[position] != rune('1') {
						goto l162
					}
					position++
					if buffer[position] != rune('2') {
						goto l162
					}
					position++
					if buffer[position] != rune('8') {
						goto l162
					}
					position++
				}
			l164:
				add(ruleLabelContainingDirectiveName, position163)
			}
			return true
		l162:
			position, tokenIndex = position162, tokenIndex162
			return false
		},
		/* 14 SymbolArgs <- <(SymbolArg (WS? ',' WS? SymbolArg)*)> */
		func() bool {
			position289, tokenIndex289 := position, tokenIndex
			{
				position290 := position
				if !_rules[ruleSymbolArg]() {
					goto l289
				}
			l291:
				{
					position292, tokenIndex292 := position, tokenIndex
					{
						position293, tokenIndex293 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l293
						}
						goto l294
					l293:
						position, tokenIndex = position293, tokenIndex293
					}
				l294:
					if buffer[position] != rune(',') {
						goto l292
					}
					position++
					{
						position295, tokenIndex295 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l295
						}
						goto l296
					l295:
						position, tokenIndex = position295, tokenIndex295
					}
				l296:
					if !_rules[ruleSymbolArg]() {
						goto l292
					}
					goto l291
				l292:
					position, tokenIndex = position292, tokenIndex292
				}
				add(ruleSymbolArgs, position290)
			}
			return true
		l289:
			position, tokenIndex = position289, tokenIndex289
			return false
		},
		/* 15 SymbolArg <- <(Offset / SymbolType / ((Offset / LocalSymbol / SymbolName / Dot) WS? Operator WS? (Offset / LocalSymbol / SymbolName)) / (LocalSymbol TCMarker?) / (SymbolName Offset) / (SymbolName TCMarker?))> */
		func() bool {
			position297, tokenIndex297 := position, tokenIndex
			{
				position298 := position
				{
					position299, tokenIndex299 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l300
					}
					goto l299
				l300:
					position, tokenIndex = position299, tokenIndex299
					if !_rules[ruleSymbolType]() {
						goto l301
					}
					goto l299
				l301:
					position, tokenIndex = position299, tokenIndex299
					{
						position303, tokenIndex303 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l304
						}
						goto l303
					l304:
						position, tokenIndex = position303, tokenIndex303
						if !_rules[ruleLocalSymbol]() {
							goto l305
						}
						goto l303
					l305:
						position, tokenIndex = position303, tokenIndex303
						if !_rules[ruleSymbolName]() {
							goto l306
						}
						goto l303
					l306:
						position, tokenIndex = position303, tokenIndex303
						if !_rules[ruleDot]() {
							goto l302
						}
					}
				l303:
					{
						position307, tokenIndex307 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l307
						}
						goto l308
					l307:
						position, tokenIndex = position307, tokenIndex307
					}
				l308:
					if !_rules[ruleOperator]() {
						goto l302
					}
					{
						position309, tokenIndex309 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l309
						}
						goto l310
					l309:
						position, tokenIndex = position309, tokenIndex309
					}
				l310:
					{
						position311, tokenIndex311 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l312
						}
						goto l311
					l312:
						position, tokenIndex = position311, tokenIndex311
						if !_rules[ruleLocalSymbol]() {
							goto l313
						}
						goto l311
					l313:
						position, tokenIndex = position311, tokenIndex311
						if !_rules[ruleSymbolName]() {
							goto l302
						}
					}
				l311:
					goto l299
				l302:
					position, tokenIndex = position299, tokenIndex299
					if !_rules[ruleLocalSymbol]() {
						goto l314
					}
					{
						position315, tokenIndex315 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l315
						}
						goto l316
					l315:
						position, tokenIndex = position315, tokenIndex315
					}
				l316:
					goto l299
				l314:
					position, tokenIndex = position299, tokenIndex299
					if !_rules[ruleSymbolName]() {
						goto l317
					}
					if !_rules[ruleOffset]() {
						goto l317
					}
					goto l299
				l317:
					position, tokenIndex = position299, tokenIndex299
					if !_rules[ruleSymbolName]() {
						goto l297
					}
					{
						position318, tokenIndex318 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l318
						}
						goto l319
					l318:
						position, tokenIndex = position318, tokenIndex318
					}
				l319:
				}
			l299:
				add(ruleSymbolArg, position298)
			}
			return true
		l297:
			position, tokenIndex = position297, tokenIndex297
			return false
		},
		/* 16 SymbolType <- <(('@' / '%') (('f' 'u' 'n' 'c' 't' 'i' 'o' 'n') / ('o' 'b' 'j' 'e' 'c' 't')))> */
		func() bool {
			position320, tokenIndex320 := position, tokenIndex
			{
				position321 := position
				{
					position322, tokenIndex322 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l323
					}
					position++
					goto l322
				l323:
					position, tokenIndex = position322, tokenIndex322
					if buffer[position] != rune('%') {
						goto l320
					}
					position++
				}
			l322:
				{
					position324, tokenIndex324 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l325
					}
					position++
					if buffer[position] != rune('u') {
						goto l325
					}
					position++
					if buffer[position] != rune('n') {
						goto l325
					}
					position++
					if buffer[position] != rune('c') {
						goto l325
					}
					position++
					if buffer[position] != rune('t') {
						goto l325
					}
					position++
					if buffer[position] != rune('i') {
						goto l325
					}
					position++
					if buffer[position] != rune('o') {
						goto l325
					}
					position++
					if buffer[position] != rune('n') {
						goto l325
					}
					position++
					goto l324
				l325:
					position, tokenIndex = position324, tokenIndex324
					if buffer[position] != rune('o') {
						goto l320
					}
					position++
					if buffer[position] != rune('b') {
						goto l320
					}
					position++
					if buffer[position] != rune('j') {
						goto l320
					}
					position++
					if buffer[position] != rune('e') {
						goto l320
					}
					position++
					if buffer[position] != rune('c') {
						goto l320
					}
					position++
					if buffer[position] != rune('t') {
						goto l320
					}
					position++
				}
			l324:
				add(ruleSymbolType, position321)
			}
			return true
		l320:
			position, tokenIndex = position320, tokenIndex320
			return false
		},
		/* 17 Dot <- <'.'> */
		func() bool {
			position326, tokenIndex326 := position, tokenIndex
			{
				position327 := position
				if buffer[position] != rune('.') {
					goto l326
				}
				position++
				add(ruleDot, position327)
			}
			return true
		l326:
			position, tokenIndex = position326, tokenIndex326
			return false
		},
		/* 18 TCMarker <- <('[' 'T' 'C' ']')> */
		func() bool {
			position328, tokenIndex328 := position, tokenIndex
			{
				position329 := position
				if buffer[position] != rune('[') {
					goto l328
				}
				position++
				if buffer[position] != rune('T') {
					goto l328
				}
				position++
				if buffer[position] != rune('C') {
					goto l328
				}
				position++
				if buffer[position] != rune(']') {
					goto l328
				}
				position++
				add(ruleTCMarker, position329)
			}
			return true
		l328:
			position, tokenIndex = position328, tokenIndex328
			return false
		},
		/* 19 EscapedChar <- <('\\' .)> */
		func() bool {
			position330, tokenIndex330 := position, tokenIndex
			{
				position331 := position
				if buffer[position] != rune('\\') {
					goto l330
				}
				position++
				if !matchDot() {
					goto l330
				}
				add(ruleEscapedChar, position331)
			}
			return true
		l330:
			position, tokenIndex = position330, tokenIndex330
			return false
		},
		/* 20 WS <- <(' ' / '\t')+> */
		func() bool {
			position332, tokenIndex332 := position, tokenIndex
			{
				position333 := position
				{
					position336, tokenIndex336 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l337
					}
					position++
					goto l336
				l337:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('\t') {
						goto l332
					}
					position++
				}
			l336:
			l334:
				{
					position335, tokenIndex335 := position, tokenIndex
					{
						position338, tokenIndex338 := position, tokenIndex
						if buffer[position] != rune(' ') {
							goto l339
						}
						position++
						goto l338
					l339:
						position, tokenIndex = position338, tokenIndex338
						if buffer[position] != rune('\t') {
							goto l335
						}
						position++
					}
				l338:
					goto l334
				l335:
					position, tokenIndex = position335, tokenIndex335
				}
				add(ruleWS, position333)
			}
			return true
		l332:
			position, tokenIndex = position332, tokenIndex332
			return false
		},
		/* 21 Comment <- <((('/' '/') / '#') (!'\n' .)*)> */
		func() bool {
			position340, tokenIndex340 := position, tokenIndex
			{
				position341 := position
				{
					position342, tokenIndex342 := position, tokenIndex
					if buffer[position] != rune('/') {
						goto l343
					}
					position++
					if buffer[position] != rune('/') {
						goto l343
					}
					position++
					goto l342
				l343:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('#') {
						goto l340
					}
					position++
				}
			l342:
			l344:
				{
					position345, tokenIndex345 := position, tokenIndex
					{
						position346, tokenIndex346 := position, tokenIndex
						if buffer[position] != rune('\n') {
							goto l346
						}
						position++
						goto l345
					l346:
						position, tokenIndex = position346, tokenIndex346
					}
					if !matchDot() {
						goto l345
					}
					goto l344
				l345:
					position, tokenIndex = position345, tokenIndex345
				}
				add(ruleComment, position341)
			}
			return true
		l340:
			position, tokenIndex = position340, tokenIndex340
			return false
		},
		/* 22 Label <- <((LocalSymbol / LocalLabel / SymbolName) ':')> */
		func() bool {
			position347, tokenIndex347 := position, tokenIndex
			{
				position348 := position
				{
					position349, tokenIndex349 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l350
					}
					goto l349
				l350:
					position, tokenIndex = position349, tokenIndex349
					if !_rules[ruleLocalLabel]() {
						goto l351
					}
					goto l349
				l351:
					position, tokenIndex = position349, tokenIndex349
					if !_rules[ruleSymbolName]() {
						goto l347
					}
				}
			l349:
				if buffer[position] != rune(':') {
					goto l347
				}
				position++
				add(ruleLabel, position348)
			}
			return true
		l347:
			position, tokenIndex = position347, tokenIndex347
			return false
		},
		/* 23 SymbolName <- <(([a-z] / [A-Z] / '.' / '_') ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]) / '$' / '_')*)> */
		func() bool {
			position352, tokenIndex352 := position, tokenIndex
			{
				position353 := position
				{
					position354, tokenIndex354 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l355
					}
					position++
					goto l354
				l355:
					position, tokenIndex = position354, tokenIndex354
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l356
					}
					position++
					goto l354
				l356:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('.') {
						goto l357
					}
					position++
					goto l354
				l357:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('_') {
						goto l352
					}
					position++
				}
			l354:
			l358:
				{
					position359, tokenIndex359 := position, tokenIndex
					{
						position360, tokenIndex360 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l361
						}
						position++
						goto l360
					l361:
						position, tokenIndex = position360, tokenIndex360
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l362
						}
						position++
						goto l360
					l362:
						position, tokenIndex = position360, tokenIndex360
						if buffer[position] != rune('.') {
							goto l363
						}
						position++
						goto l360
					l363:
						position, tokenIndex = position360, tokenIndex360
						{
							position365, tokenIndex365 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l366
							}
							position++
							goto l365
						l366:
							position, tokenIndex = position365, tokenIndex365
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l364
							}
							position++
						}
					l365:
						goto l360
					l364:
						position, tokenIndex = position360, tokenIndex360
						if buffer[position] != rune('$') {
							goto l367
						}
						position++
						goto l360
					l367:
						position, tokenIndex = position360, tokenIndex360
						if buffer[position] != rune('_') {
							goto l359
						}
						position++
					}
				l360:
					goto l358
				l359:
					position, tokenIndex = position359, tokenIndex359
				}
				add(ruleSymbolName, position353)
			}
			return true
		l352:
			position, tokenIndex = position352, tokenIndex352
			return false
		},
		/* 24 LocalSymbol <- <('.' 'L' ([a-z] / [A-Z] / ([a-z] / [A-Z]) / '.' / ([0-9] / [0-9]) / '$' / '_')+)> */
		func() bool {
			position368, tokenIndex368 := position, tokenIndex
			{
				position369 := position
				if buffer[position] != rune('.') {
					goto l368
				}
				position++
				if buffer[position] != rune('L') {
					goto l368
				}
				position++
				{
					position372, tokenIndex372 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l373
					}
					position++
					goto l372
				l373:
					position, tokenIndex = position372, tokenIndex372
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l374
					}
					position++
					goto l372
				l374:
					position, tokenIndex = position372, tokenIndex372
					{
						position376, tokenIndex376 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l377
						}
						position++
						goto l376
					l377:
						position, tokenIndex = position376, tokenIndex376
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l375
						}
						position++
					}
				l376:
					goto l372
				l375:
					position, tokenIndex = position372, tokenIndex372
					if buffer[position] != rune('.') {
						goto l378
					}
					position++
					goto l372
				l378:
					position, tokenIndex = position372, tokenIndex372
					{
						position380, tokenIndex380 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l381
						}
						position++
						goto l380
					l381:
						position, tokenIndex = position380, tokenIndex380
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l379
						}
						position++
					}
				l380:
					goto l372
				l379:
					position, tokenIndex = position372, tokenIndex372
					if buffer[position] != rune('$') {
						goto l382
					}
					position++
					goto l372
				l382:
					position, tokenIndex = position372, tokenIndex372
					if buffer[position] != rune('_') {
						goto l368
					}
					position++
				}
			l372:
			l370:
				{
					position371, tokenIndex371 := position, tokenIndex
					{
						position383, tokenIndex383 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l384
						}
						position++
						goto l383
					l384:
						position, tokenIndex = position383, tokenIndex383
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l385
						}
						position++
						goto l383
					l385:
						position, tokenIndex = position383, tokenIndex383
						{
							position387, tokenIndex387 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l388
							}
							position++
							goto l387
						l388:
							position, tokenIndex = position387, tokenIndex387
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l386
							}
							position++
						}
					l387:
						goto l383
					l386:
						position, tokenIndex = position383, tokenIndex383
						if buffer[position] != rune('.') {
							goto l389
						}
						position++
						goto l383
					l389:
						position, tokenIndex = position383, tokenIndex383
						{
							position391, tokenIndex391 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l392
							}
							position++
							goto l391
						l392:
							position, tokenIndex = position391, tokenIndex391
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l390
							}
							position++
						}
					l391:
						goto l383
					l390:
						position, tokenIndex = position383, tokenIndex383
						if buffer[position] != rune('$') {
							goto l393
						}
						position++
						goto l383
					l393:
						position, tokenIndex = position383, tokenIndex383
						if buffer[position] != rune('_') {
							goto l371
						}
						position++
					}
				l383:
					goto l370
				l371:
					position, tokenIndex = position371, tokenIndex371
				}
				add(ruleLocalSymbol, position369)
			}
			return true
		l368:
			position, tokenIndex = position368, tokenIndex368
			return false
		},
		/* 25 LocalLabel <- <([0-9] ([0-9] / '$')*)> */
		func() bool {
			position394, tokenIndex394 := position, tokenIndex
			{
				position395 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l394
				}
				position++
			l396:
				{
					position397, tokenIndex397 := position, tokenIndex
					{
						position398, tokenIndex398 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l399
						}
						position++
						goto l398
					l399:
						position, tokenIndex = position398, tokenIndex398
						if buffer[position] != rune('$') {
							goto l397
						}
						position++
					}
				l398:
					goto l396
				l397:
					position, tokenIndex = position397, tokenIndex397
				}
				add(ruleLocalLabel, position395)
			}
			return true
		l394:
			position, tokenIndex = position394, tokenIndex394
			return false
		},
		/* 26 LocalLabelRef <- <([0-9] ([0-9] / '$')* ('b' / 'f'))> */
		func() bool {
			position400, tokenIndex400 := position, tokenIndex
			{
				position401 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l400
				}
				position++
			l402:
				{
					position403, tokenIndex403 := position, tokenIndex
					{
						position404, tokenIndex404 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l405
						}
						position++
						goto l404
					l405:
						position, tokenIndex = position404, tokenIndex404
						if buffer[position] != rune('$') {
							goto l403
						}
						position++
					}
				l404:
					goto l402
				l403:
					position, tokenIndex = position403, tokenIndex403
				}
				{
					position406, tokenIndex406 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l407
					}
					position++
					goto l406
				l407:
					position, tokenIndex = position406, tokenIndex406
					if buffer[position] != rune('f') {
						goto l400
					}
					position++
				}
			l406:
				add(ruleLocalLabelRef, position401)
			}
			return true
		l400:
			position, tokenIndex = position400, tokenIndex400
			return false
		},
		/* 27 Instruction <- <(InstructionName (WS InstructionArg (WS? ',' WS? InstructionArg)*)?)> */
		func() bool {
			position408, tokenIndex408 := position, tokenIndex
			{
				position409 := position
				if !_rules[ruleInstructionName]() {
					goto l408
				}
				{
					position410, tokenIndex410 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l410
					}
					if !_rules[ruleInstructionArg]() {
						goto l410
					}
				l412:
					{
						position413, tokenIndex413 := position, tokenIndex
						{
							position414, tokenIndex414 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l414
							}
							goto l415
						l414:
							position, tokenIndex = position414, tokenIndex414
						}
					l415:
						if buffer[position] != rune(',') {
							goto l413
						}
						position++
						{
							position416, tokenIndex416 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l416
							}
							goto l417
						l416:
							position, tokenIndex = position416, tokenIndex416
						}
					l417:
						if !_rules[ruleInstructionArg]() {
							goto l413
						}
						goto l412
					l413:
						position, tokenIndex = position413, tokenIndex413
					}
					goto l411
				l410:
					position, tokenIndex = position410, tokenIndex410
				}
			l411:
				add(ruleInstruction, position409)
			}
			return true
		l408:
			position, tokenIndex = position408, tokenIndex408
			return false
		},
		/* 28 InstructionName <- <(([a-z] / [A-Z]) ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]))* ('.' / '+' / '-')?)> */
		func() bool {
			position418, tokenIndex418 := position, tokenIndex
			{
				position419 := position
				{
					position420, tokenIndex420 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l421
					}
					position++
					goto l420
				l421:
					position, tokenIndex = position420, tokenIndex420
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l418
					}
					position++
				}
			l420:
			l422:
				{
					position423, tokenIndex423 := position, tokenIndex
					{
						position424, tokenIndex424 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l425
						}
						position++
						goto l424
					l425:
						position, tokenIndex = position424, tokenIndex424
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l426
						}
						position++
						goto l424
					l426:
						position, tokenIndex = position424, tokenIndex424
						if buffer[position] != rune('.') {
							goto l427
						}
						position++
						goto l424
					l427:
						position, tokenIndex = position424, tokenIndex424
						{
							position428, tokenIndex428 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l429
							}
							position++
							goto l428
						l429:
							position, tokenIndex = position428, tokenIndex428
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l423
							}
							position++
						}
					l428:
					}
				l424:
					goto l422
				l423:
					position, tokenIndex = position423, tokenIndex423
				}
				{
					position430, tokenIndex430 := position, tokenIndex
					{
						position432, tokenIndex432 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l433
						}
						position++
						goto l432
					l433:
						position, tokenIndex = position432, tokenIndex432
						if buffer[position] != rune('+') {
							goto l434
						}
						position++
						goto l432
					l434:
						position, tokenIndex = position432, tokenIndex432
						if buffer[position] != rune('-') {
							goto l430
						}
						position++
					}
				l432:
					goto l431
				l430:
					position, tokenIndex = position430, tokenIndex430
				}
			l431:
				add(ruleInstructionName, position419)
			}
			return true
		l418:
			position, tokenIndex = position418, tokenIndex418
			return false
		},
		/* 29 InstructionArg <- <(IndirectionIndicator? (ARMConstantTweak / RegisterOrConstant / LocalLabelRef / TOCRefHigh / TOCRefLow / GOTLocation / GOTSymbolOffset / MemoryRef / (('s' / 'S') ('p' / 'P') ',' ('s' / 'S') ('p' / 'P') ',' '#' '3' '2' '*' '(' '1' '2' '-' '4' ')')) AVX512Token*)> */
		func() bool {
			position435, tokenIndex435 := position, tokenIndex
			{
				position436 := position
				{
					position437, tokenIndex437 := position, tokenIndex
					if !_rules[ruleIndirectionIndicator]() {
						goto l437
					}
					goto l438
				l437:
					position, tokenIndex = position437, tokenIndex437
				}
			l438:
				{
					position439, tokenIndex439 := position, tokenIndex
					if !_rules[ruleARMConstantTweak]() {
						goto l440
					}
					goto l439
				l440:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleRegisterOrConstant]() {
						goto l441
					}
					goto l439
				l441:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleLocalLabelRef]() {
						goto l442
					}
					goto l439
				l442:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleTOCRefHigh]() {
						goto l443
					}
					goto l439
				l443:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleTOCRefLow]() {
						goto l444
					}
					goto l439
				l444:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleGOTLocation]() {
						goto l445
					}
					goto l439
				l445:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleGOTSymbolOffset]() {
						goto l446
					}
					goto l439
				l446:
					position, tokenIndex = position439, tokenIndex439
					if !_rules[ruleMemoryRef]() {
						goto l447
					}
					goto l439
				l447:
					position, tokenIndex = position439, tokenIndex439
					{
						position448, tokenIndex448 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l449
						}
						position++
						goto l448
					l449:
						position, tokenIndex = position448, tokenIndex448
						if buffer[position] != rune('S') {
							goto l435
						}
						position++
					}
				l448:
					{
						position450, tokenIndex450 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l451
						}
						position++
						goto l450
					l451:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('P') {
							goto l435
						}
						position++
					}
				l450:
					if buffer[position] != rune(',') {
						goto l435
					}
					position++
					{
						position452, tokenIndex452 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l453
						}
						position++
						goto l452
					l453:
						position, tokenIndex = position452, tokenIndex452
						if buffer[position] != rune('S') {
							goto l435
						}
						position++
					}
				l452:
					{
						position454, tokenIndex454 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l455
						}
						position++
						goto l454
					l455:
						position, tokenIndex = position454, tokenIndex454
						if buffer[position] != rune('P') {
							goto l435
						}
						position++
					}
				l454:
					if buffer[position] != rune(',') {
						goto l435
					}
					position++
					if buffer[position] != rune('#') {
						goto l435
					}
					position++
					if buffer[position] != rune('3') {
						goto l435
					}
					position++
					if buffer[position] != rune('2') {
						goto l435
					}
					position++
					if buffer[position] != rune('*') {
						goto l435
					}
					position++
					if buffer[position] != rune('(') {
						goto l435
					}
					position++
					if buffer[position] != rune('1') {
						goto l435
					}
					position++
					if buffer[position] != rune('2') {
						goto l435
					}
					position++
					if buffer[position] != rune('-') {
						goto l435
					}
					position++
					if buffer[position] != rune('4') {
						goto l435
					}
					position++
					if buffer[position] != rune(')') {
						goto l435
					}
					position++
				}
			l439:
			l456:
				{
					position457, tokenIndex457 := position, tokenIndex
					if !_rules[ruleAVX512Token]() {
						goto l457
					}
					goto l456
				l457:
					position, tokenIndex = position457, tokenIndex457
				}
				add(ruleInstructionArg, position436)
			}
			return true
		l435:
			position, tokenIndex = position435, tokenIndex435
			return false
		},
		/* 30 GOTLocation <- <('$' '_' 'G' 'L' 'O' 'B' 'A' 'L' '_' 'O' 'F' 'F' 'S' 'E' 'T' '_' 'T' 'A' 'B' 'L' 'E' '_' '-' LocalSymbol)> */
		func() bool {
			position458, tokenIndex458 := position, tokenIndex
			{
				position459 := position
				if buffer[position] != rune('$') {
					goto l458
				}
				position++
				if buffer[position] != rune('_') {
					goto l458
				}
				position++
				if buffer[position] != rune('G') {
					goto l458
				}
				position++
				if buffer[position] != rune('L') {
					goto l458
				}
				position++
				if buffer[position] != rune('O') {
					goto l458
				}
				position++
				if buffer[position] != rune('B') {
					goto l458
				}
				position++
				if buffer[position] != rune('A') {
					goto l458
				}
				position++
				if buffer[position] != rune('L') {
					goto l458
				}
				position++
				if buffer[position] != rune('_') {
					goto l458
				}
				position++
				if buffer[position] != rune('O') {
					goto l458
				}
				position++
				if buffer[position] != rune('F') {
					goto l458
				}
				position++
				if buffer[position] != rune('F') {
					goto l458
				}
				position++
				if buffer[position] != rune('S') {
					goto l458
				}
				position++
				if buffer[position] != rune('E') {
					goto l458
				}
				position++
				if buffer[position] != rune('T') {
					goto l458
				}
				position++
				if buffer[position] != rune('_') {
					goto l458
				}
				position++
				if buffer[position] != rune('T') {
					goto l458
				}
				position++
				if buffer[position] != rune('A') {
					goto l458
				}
				position++
				if buffer[position] != rune('B') {
					goto l458
				}
				position++
				if buffer[position] != rune('L') {
					goto l458
				}
				position++
				if buffer[position] != rune('E') {
					goto l458
				}
				position++
				if buffer[position] != rune('_') {
					goto l458
				}
				position++
				if buffer[position] != rune('-') {
					goto l458
				}
				position++
				if !_rules[ruleLocalSymbol]() {
					goto l458
				}
				add(ruleGOTLocation, position459)
			}
			return true
		l458:
			position, tokenIndex = position458, tokenIndex458
			return false
		},
		/* 31 GOTSymbolOffset <- <(('$' SymbolName ('@' 'G' 'O' 'T') ('O' 'F' 'F')?) / (':' ('g' / 'G') ('o' / 'O') ('t' / 'T') ':' SymbolName))> */
		func() bool {
			position460, tokenIndex460 := position, tokenIndex
			{
				position461 := position
				{
					position462, tokenIndex462 := position, tokenIndex
					if buffer[position] != rune('$') {
						goto l463
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l463
					}
					if buffer[position] != rune('@') {
						goto l463
					}
					position++
					if buffer[position] != rune('G') {
						goto l463
					}
					position++
					if buffer[position] != rune('O') {
						goto l463
					}
					position++
					if buffer[position] != rune('T') {
						goto l463
					}
					position++
					{
						position464, tokenIndex464 := position, tokenIndex
						if buffer[position] != rune('O') {
							goto l464
						}
						position++
						if buffer[position] != rune('F') {
							goto l464
						}
						position++
						if buffer[position] != rune('F') {
							goto l464
						}
						position++
						goto l465
					l464:
						position, tokenIndex = position464, tokenIndex464
					}
				l465:
					goto l462
				l463:
					position, tokenIndex = position462, tokenIndex462
					if buffer[position] != rune(':') {
						goto l460
					}
					position++
					{
						position466, tokenIndex466 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l467
						}
						position++
						goto l466
					l467:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('G') {
							goto l460
						}
						position++
					}
				l466:
					{
						position468, tokenIndex468 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l469
						}
						position++
						goto l468
					l469:
						position, tokenIndex = position468, tokenIndex468
						if buffer[position] != rune('O') {
							goto l460
						}
						position++
					}
				l468:
					{
						position470, tokenIndex470 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l471
						}
						position++
						goto l470
					l471:
						position, tokenIndex = position470, tokenIndex470
						if buffer[position] != rune('T') {
							goto l460
						}
						position++
					}
				l470:
					if buffer[position] != rune(':') {
						goto l460
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l460
					}
				}
			l462:
				add(ruleGOTSymbolOffset, position461)
			}
			return true
		l460:
			position, tokenIndex = position460, tokenIndex460
			return false
		},
		/* 32 AVX512Token <- <(WS? '{' '%'? ([0-9] / [a-z])* '}')> */
		func() bool {
			position472, tokenIndex472 := position, tokenIndex
			{
				position473 := position
				{
					position474, tokenIndex474 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l474
					}
					goto l475
				l474:
					position, tokenIndex = position474, tokenIndex474
				}
			l475:
				if buffer[position] != rune('{') {
					goto l472
				}
				position++
				{
					position476, tokenIndex476 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l476
					}
					position++
					goto l477
				l476:
					position, tokenIndex = position476, tokenIndex476
				}
			l477:
			l478:
				{
					position479, tokenIndex479 := position, tokenIndex
					{
						position480, tokenIndex480 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l481
						}
						position++
						goto l480
					l481:
						position, tokenIndex = position480, tokenIndex480
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l479
						}
						position++
					}
				l480:
					goto l478
				l479:
					position, tokenIndex = position479, tokenIndex479
				}
				if buffer[position] != rune('}') {
					goto l472
				}
				position++
				add(ruleAVX512Token, position473)
			}
			return true
		l472:
			position, tokenIndex = position472, tokenIndex472
			return false
		},
		/* 33 TOCRefHigh <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('h' / 'H') ('a' / 'A')))> */
		func() bool {
			position482, tokenIndex482 := position, tokenIndex
			{
				position483 := position
				if buffer[position] != rune('.') {
					goto l482
				}
				position++
				if buffer[position] != rune('T') {
					goto l482
				}
				position++
				if buffer[position] != rune('O') {
					goto l482
				}
				position++
				if buffer[position] != rune('C') {
					goto l482
				}
				position++
				if buffer[position] != rune('.') {
					goto l482
				}
				position++
				if buffer[position] != rune('-') {
					goto l482
				}
				position++
				{
					position484, tokenIndex484 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l485
					}
					position++
					if buffer[position] != rune('b') {
						goto l485
					}
					position++
					goto l484
				l485:
					position, tokenIndex = position484, tokenIndex484
					if buffer[position] != rune('.') {
						goto l482
					}
					position++
					if buffer[position] != rune('L') {
						goto l482
					}
					position++
					{
						position488, tokenIndex488 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l489
						}
						position++
						goto l488
					l489:
						position, tokenIndex = position488, tokenIndex488
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l490
						}
						position++
						goto l488
					l490:
						position, tokenIndex = position488, tokenIndex488
						if buffer[position] != rune('_') {
							goto l491
						}
						position++
						goto l488
					l491:
						position, tokenIndex = position488, tokenIndex488
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l482
						}
						position++
					}
				l488:
				l486:
					{
						position487, tokenIndex487 := position, tokenIndex
						{
							position492, tokenIndex492 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l493
							}
							position++
							goto l492
						l493:
							position, tokenIndex = position492, tokenIndex492
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l494
							}
							position++
							goto l492
						l494:
							position, tokenIndex = position492, tokenIndex492
							if buffer[position] != rune('_') {
								goto l495
							}
							position++
							goto l492
						l495:
							position, tokenIndex = position492, tokenIndex492
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l487
							}
							position++
						}
					l492:
						goto l486
					l487:
						position, tokenIndex = position487, tokenIndex487
					}
				}
			l484:
				if buffer[position] != rune('@') {
					goto l482
				}
				position++
				{
					position496, tokenIndex496 := position, tokenIndex
					if buffer[position] != rune('h') {
						goto l497
					}
					position++
					goto l496
				l497:
					position, tokenIndex = position496, tokenIndex496
					if buffer[position] != rune('H') {
						goto l482
					}
					position++
				}
			l496:
				{
					position498, tokenIndex498 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l499
					}
					position++
					goto l498
				l499:
					position, tokenIndex = position498, tokenIndex498
					if buffer[position] != rune('A') {
						goto l482
					}
					position++
				}
			l498:
				add(ruleTOCRefHigh, position483)
			}
			return true
		l482:
			position, tokenIndex = position482, tokenIndex482
			return false
		},
		/* 34 TOCRefLow <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('l' / 'L')))> */
		func() bool {
			position500, tokenIndex500 := position, tokenIndex
			{
				position501 := position
				if buffer[position] != rune('.') {
					goto l500
				}
				position++
				if buffer[position] != rune('T') {
					goto l500
				}
				position++
				if buffer[position] != rune('O') {
					goto l500
				}
				position++
				if buffer[position] != rune('C') {
					goto l500
				}
				position++
				if buffer[position] != rune('.') {
					goto l500
				}
				position++
				if buffer[position] != rune('-') {
					goto l500
				}
				position++
				{
					position502, tokenIndex502 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l503
					}
					position++
					if buffer[position] != rune('b') {
						goto l503
					}
					position++
					goto l502
				l503:
					position, tokenIndex = position502, tokenIndex502
					if buffer[position] != rune('.') {
						goto l500
					}
					position++
					if buffer[position] != rune('L') {
						goto l500
					}
					position++
					{
						position506, tokenIndex506 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l507
						}
						position++
						goto l506
					l507:
						position, tokenIndex = position506, tokenIndex506
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l508
						}
						position++
						goto l506
					l508:
						position, tokenIndex = position506, tokenIndex506
						if buffer[position] != rune('_') {
							goto l509
						}
						position++
						goto l506
					l509:
						position, tokenIndex = position506, tokenIndex506
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l500
						}
						position++
					}
				l506:
				l504:
					{
						position505, tokenIndex505 := position, tokenIndex
						{
							position510, tokenIndex510 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l511
							}
							position++
							goto l510
						l511:
							position, tokenIndex = position510, tokenIndex510
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l512
							}
							position++
							goto l510
						l512:
							position, tokenIndex = position510, tokenIndex510
							if buffer[position] != rune('_') {
								goto l513
							}
							position++
							goto l510
						l513:
							position, tokenIndex = position510, tokenIndex510
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l505
							}
							position++
						}
					l510:
						goto l504
					l505:
						position, tokenIndex = position505, tokenIndex505
					}
				}
			l502:
				if buffer[position] != rune('@') {
					goto l500
				}
				position++
				{
					position514, tokenIndex514 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l515
					}
					position++
					goto l514
				l515:
					position, tokenIndex = position514, tokenIndex514
					if buffer[position] != rune('L') {
						goto l500
					}
					position++
				}
			l514:
				add(ruleTOCRefLow, position501)
			}
			return true
		l500:
			position, tokenIndex = position500, tokenIndex500
			return false
		},
		/* 35 IndirectionIndicator <- <'*'> */
		func() bool {
			position516, tokenIndex516 := position, tokenIndex
			{
				position517 := position
				if buffer[position] != rune('*') {
					goto l516
				}
				position++
				add(ruleIndirectionIndicator, position517)
			}
			return true
		l516:
			position, tokenIndex = position516, tokenIndex516
			return false
		},
		/* 36 RegisterOrConstant <- <((('%' ([a-z] / [A-Z]) ([a-z] / [A-Z] / ([0-9] / [0-9]))*) / ('$'? ((Offset Offset) / Offset)) / ('#' Offset ('*' [0-9]+ ('-' [0-9] [0-9]*)?)?) / ('#' '~'? '(' [0-9] WS? ('<' '<') WS? [0-9] ')') / ARMRegister) !('f' / 'b' / ':' / '(' / '+' / '-'))> */
		func() bool {
			position518, tokenIndex518 := position, tokenIndex
			{
				position519 := position
				{
					position520, tokenIndex520 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l521
					}
					position++
					{
						position522, tokenIndex522 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l523
						}
						position++
						goto l522
					l523:
						position, tokenIndex = position522, tokenIndex522
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l521
						}
						position++
					}
				l522:
				l524:
					{
						position525, tokenIndex525 := position, tokenIndex
						{
							position526, tokenIndex526 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l527
							}
							position++
							goto l526
						l527:
							position, tokenIndex = position526, tokenIndex526
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l528
							}
							position++
							goto l526
						l528:
							position, tokenIndex = position526, tokenIndex526
							{
								position529, tokenIndex529 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l530
								}
								position++
								goto l529
							l530:
								position, tokenIndex = position529, tokenIndex529
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l525
								}
								position++
							}
						l529:
						}
					l526:
						goto l524
					l525:
						position, tokenIndex = position525, tokenIndex525
					}
					goto l520
				l521:
					position, tokenIndex = position520, tokenIndex520
					{
						position532, tokenIndex532 := position, tokenIndex
						if buffer[position] != rune('$') {
							goto l532
						}
						position++
						goto l533
					l532:
						position, tokenIndex = position532, tokenIndex532
					}
				l533:
					{
						position534, tokenIndex534 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l535
						}
						if !_rules[ruleOffset]() {
							goto l535
						}
						goto l534
					l535:
						position, tokenIndex = position534, tokenIndex534
						if !_rules[ruleOffset]() {
							goto l531
						}
					}
				l534:
					goto l520
				l531:
					position, tokenIndex = position520, tokenIndex520
					if buffer[position] != rune('#') {
						goto l536
					}
					position++
					if !_rules[ruleOffset]() {
						goto l536
					}
					{
						position537, tokenIndex537 := position, tokenIndex
						if buffer[position] != rune('*') {
							goto l537
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l537
						}
						position++
					l539:
						{
							position540, tokenIndex540 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l540
							}
							position++
							goto l539
						l540:
							position, tokenIndex = position540, tokenIndex540
						}
						{
							position541, tokenIndex541 := position, tokenIndex
							if buffer[position] != rune('-') {
								goto l541
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l541
							}
							position++
						l543:
							{
								position544, tokenIndex544 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l544
								}
								position++
								goto l543
							l544:
								position, tokenIndex = position544, tokenIndex544
							}
							goto l542
						l541:
							position, tokenIndex = position541, tokenIndex541
						}
					l542:
						goto l538
					l537:
						position, tokenIndex = position537, tokenIndex537
					}
				l538:
					goto l520
				l536:
					position, tokenIndex = position520, tokenIndex520
					if buffer[position] != rune('#') {
						goto l545
					}
					position++
					{
						position546, tokenIndex546 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l546
						}
						position++
						goto l547
					l546:
						position, tokenIndex = position546, tokenIndex546
					}
				l547:
					if buffer[position] != rune('(') {
						goto l545
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l545
					}
					position++
					{
						position548, tokenIndex548 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l548
						}
						goto l549
					l548:
						position, tokenIndex = position548, tokenIndex548
					}
				l549:
					if buffer[position] != rune('<') {
						goto l545
					}
					position++
					if buffer[position] != rune('<') {
						goto l545
					}
					position++
					{
						position550, tokenIndex550 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l550
						}
						goto l551
					l550:
						position, tokenIndex = position550, tokenIndex550
					}
				l551:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l545
					}
					position++
					if buffer[position] != rune(')') {
						goto l545
					}
					position++
					goto l520
				l545:
					position, tokenIndex = position520, tokenIndex520
					if !_rules[ruleARMRegister]() {
						goto l518
					}
				}
			l520:
				{
					position552, tokenIndex552 := position, tokenIndex
					{
						position553, tokenIndex553 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l554
						}
						position++
						goto l553
					l554:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune('b') {
							goto l555
						}
						position++
						goto l553
					l555:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune(':') {
							goto l556
						}
						position++
						goto l553
					l556:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune('(') {
							goto l557
						}
						position++
						goto l553
					l557:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune('+') {
							goto l558
						}
						position++
						goto l553
					l558:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune('-') {
							goto l552
						}
						position++
					}
				l553:
					goto l518
				l552:
					position, tokenIndex = position552, tokenIndex552
				}
				add(ruleRegisterOrConstant, position519)
			}
			return true
		l518:
			position, tokenIndex = position518, tokenIndex518
			return false
		},
		/* 37 ARMConstantTweak <- <(((('l' / 'L') ('s' / 'S') ('l' / 'L')) / (('s' / 'S') ('x' / 'X') ('t' / 'T') ('w' / 'W')) / (('u' / 'U') ('x' / 'X') ('t' / 'T') ('w' / 'W')) / (('u' / 'U') ('x' / 'X') ('t' / 'T') ('b' / 'B')) / (('l' / 'L') ('s' / 'S') ('r' / 'R')) / (('r' / 'R') ('o' / 'O') ('r' / 'R')) / (('a' / 'A') ('s' / 'S') ('r' / 'R'))) (WS '#' Offset)?)> */
		func() bool {
			position559, tokenIndex559 := position, tokenIndex
			{
				position560 := position
				{
					position561, tokenIndex561 := position, tokenIndex
					{
						position563, tokenIndex563 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l564
						}
						position++
						goto l563
					l564:
						position, tokenIndex = position563, tokenIndex563
						if buffer[position] != rune('L') {
							goto l562
						}
						position++
					}
				l563:
					{
						position565, tokenIndex565 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l566
						}
						position++
						goto l565
					l566:
						position, tokenIndex = position565, tokenIndex565
						if buffer[position] != rune('S') {
							goto l562
						}
						position++
					}
				l565:
					{
						position567, tokenIndex567 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l568
						}
						position++
						goto l567
					l568:
						position, tokenIndex = position567, tokenIndex567
						if buffer[position] != rune('L') {
							goto l562
						}
						position++
					}
				l567:
					goto l561
				l562:
					position, tokenIndex = position561, tokenIndex561
					{
						position570, tokenIndex570 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l571
						}
						position++
						goto l570
					l571:
						position, tokenIndex = position570, tokenIndex570
						if buffer[position] != rune('S') {
							goto l569
						}
						position++
					}
				l570:
					{
						position572, tokenIndex572 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l573
						}
						position++
						goto l572
					l573:
						position, tokenIndex = position572, tokenIndex572
						if buffer[position] != rune('X') {
							goto l569
						}
						position++
					}
				l572:
					{
						position574, tokenIndex574 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l575
						}
						position++
						goto l574
					l575:
						position, tokenIndex = position574, tokenIndex574
						if buffer[position] != rune('T') {
							goto l569
						}
						position++
					}
				l574:
					{
						position576, tokenIndex576 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l577
						}
						position++
						goto l576
					l577:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('W') {
							goto l569
						}
						position++
					}
				l576:
					goto l561
				l569:
					position, tokenIndex = position561, tokenIndex561
					{
						position579, tokenIndex579 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l580
						}
						position++
						goto l579
					l580:
						position, tokenIndex = position579, tokenIndex579
						if buffer[position] != rune('U') {
							goto l578
						}
						position++
					}
				l579:
					{
						position581, tokenIndex581 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l582
						}
						position++
						goto l581
					l582:
						position, tokenIndex = position581, tokenIndex581
						if buffer[position] != rune('X') {
							goto l578
						}
						position++
					}
				l581:
					{
						position583, tokenIndex583 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l584
						}
						position++
						goto l583
					l584:
						position, tokenIndex = position583, tokenIndex583
						if buffer[position] != rune('T') {
							goto l578
						}
						position++
					}
				l583:
					{
						position585, tokenIndex585 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l586
						}
						position++
						goto l585
					l586:
						position, tokenIndex = position585, tokenIndex585
						if buffer[position] != rune('W') {
							goto l578
						}
						position++
					}
				l585:
					goto l561
				l578:
					position, tokenIndex = position561, tokenIndex561
					{
						position588, tokenIndex588 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l589
						}
						position++
						goto l588
					l589:
						position, tokenIndex = position588, tokenIndex588
						if buffer[position] != rune('U') {
							goto l587
						}
						position++
					}
				l588:
					{
						position590, tokenIndex590 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l591
						}
						position++
						goto l590
					l591:
						position, tokenIndex = position590, tokenIndex590
						if buffer[position] != rune('X') {
							goto l587
						}
						position++
					}
				l590:
					{
						position592, tokenIndex592 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l593
						}
						position++
						goto l592
					l593:
						position, tokenIndex = position592, tokenIndex592
						if buffer[position] != rune('T') {
							goto l587
						}
						position++
					}
				l592:
					{
						position594, tokenIndex594 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l595
						}
						position++
						goto l594
					l595:
						position, tokenIndex = position594, tokenIndex594
						if buffer[position] != rune('B') {
							goto l587
						}
						position++
					}
				l594:
					goto l561
				l587:
					position, tokenIndex = position561, tokenIndex561
					{
						position597, tokenIndex597 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l598
						}
						position++
						goto l597
					l598:
						position, tokenIndex = position597, tokenIndex597
						if buffer[position] != rune('L') {
							goto l596
						}
						position++
					}
				l597:
					{
						position599, tokenIndex599 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l600
						}
						position++
						goto l599
					l600:
						position, tokenIndex = position599, tokenIndex599
						if buffer[position] != rune('S') {
							goto l596
						}
						position++
					}
				l599:
					{
						position601, tokenIndex601 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l602
						}
						position++
						goto l601
					l602:
						position, tokenIndex = position601, tokenIndex601
						if buffer[position] != rune('R') {
							goto l596
						}
						position++
					}
				l601:
					goto l561
				l596:
					position, tokenIndex = position561, tokenIndex561
					{
						position604, tokenIndex604 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l605
						}
						position++
						goto l604
					l605:
						position, tokenIndex = position604, tokenIndex604
						if buffer[position] != rune('R') {
							goto l603
						}
						position++
					}
				l604:
					{
						position606, tokenIndex606 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l607
						}
						position++
						goto l606
					l607:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('O') {
							goto l603
						}
						position++
					}
				l606:
					{
						position608, tokenIndex608 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l609
						}
						position++
						goto l608
					l609:
						position, tokenIndex = position608, tokenIndex608
						if buffer[position] != rune('R') {
							goto l603
						}
						position++
					}
				l608:
					goto l561
				l603:
					position, tokenIndex = position561, tokenIndex561
					{
						position610, tokenIndex610 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l611
						}
						position++
						goto l610
					l611:
						position, tokenIndex = position610, tokenIndex610
						if buffer[position] != rune('A') {
							goto l559
						}
						position++
					}
				l610:
					{
						position612, tokenIndex612 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l613
						}
						position++
						goto l612
					l613:
						position, tokenIndex = position612, tokenIndex612
						if buffer[position] != rune('S') {
							goto l559
						}
						position++
					}
				l612:
					{
						position614, tokenIndex614 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l615
						}
						position++
						goto l614
					l615:
						position, tokenIndex = position614, tokenIndex614
						if buffer[position] != rune('R') {
							goto l559
						}
						position++
					}
				l614:
				}
			l561:
				{
					position616, tokenIndex616 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l616
					}
					if buffer[position] != rune('#') {
						goto l616
					}
					position++
					if !_rules[ruleOffset]() {
						goto l616
					}
					goto l617
				l616:
					position, tokenIndex = position616, tokenIndex616
				}
			l617:
				add(ruleARMConstantTweak, position560)
			}
			return true
		l559:
			position, tokenIndex = position559, tokenIndex559
			return false
		},
		/* 38 ARMRegister <- <((('s' / 'S') ('p' / 'P')) / (('x' / 'w' / 'd' / 'q' / 's') [0-9] [0-9]?) / (('x' / 'X') ('z' / 'Z') ('r' / 'R')) / (('w' / 'W') ('z' / 'Z') ('r' / 'R')) / ARMVectorRegister / ('{' WS? ARMVectorRegister (',' WS? ARMVectorRegister)* WS? '}' ('[' [0-9] ']')?))> */
		func() bool {
			position618, tokenIndex618 := position, tokenIndex
			{
				position619 := position
				{
					position620, tokenIndex620 := position, tokenIndex
					{
						position622, tokenIndex622 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l623
						}
						position++
						goto l622
					l623:
						position, tokenIndex = position622, tokenIndex622
						if buffer[position] != rune('S') {
							goto l621
						}
						position++
					}
				l622:
					{
						position624, tokenIndex624 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l625
						}
						position++
						goto l624
					l625:
						position, tokenIndex = position624, tokenIndex624
						if buffer[position] != rune('P') {
							goto l621
						}
						position++
					}
				l624:
					goto l620
				l621:
					position, tokenIndex = position620, tokenIndex620
					{
						position627, tokenIndex627 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l628
						}
						position++
						goto l627
					l628:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('w') {
							goto l629
						}
						position++
						goto l627
					l629:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('d') {
							goto l630
						}
						position++
						goto l627
					l630:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('q') {
							goto l631
						}
						position++
						goto l627
					l631:
						position, tokenIndex = position627, tokenIndex627
						if buffer[position] != rune('s') {
							goto l626
						}
						position++
					}
				l627:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l626
					}
					position++
					{
						position632, tokenIndex632 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l632
						}
						position++
						goto l633
					l632:
						position, tokenIndex = position632, tokenIndex632
					}
				l633:
					goto l620
				l626:
					position, tokenIndex = position620, tokenIndex620
					{
						position635, tokenIndex635 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l636
						}
						position++
						goto l635
					l636:
						position, tokenIndex = position635, tokenIndex635
						if buffer[position] != rune('X') {
							goto l634
						}
						position++
					}
				l635:
					{
						position637, tokenIndex637 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l638
						}
						position++
						goto l637
					l638:
						position, tokenIndex = position637, tokenIndex637
						if buffer[position] != rune('Z') {
							goto l634
						}
						position++
					}
				l637:
					{
						position639, tokenIndex639 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l640
						}
						position++
						goto l639
					l640:
						position, tokenIndex = position639, tokenIndex639
						if buffer[position] != rune('R') {
							goto l634
						}
						position++
					}
				l639:
					goto l620
				l634:
					position, tokenIndex = position620, tokenIndex620
					{
						position642, tokenIndex642 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l643
						}
						position++
						goto l642
					l643:
						position, tokenIndex = position642, tokenIndex642
						if buffer[position] != rune('W') {
							goto l641
						}
						position++
					}
				l642:
					{
						position644, tokenIndex644 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l645
						}
						position++
						goto l644
					l645:
						position, tokenIndex = position644, tokenIndex644
						if buffer[position] != rune('Z') {
							goto l641
						}
						position++
					}
				l644:
					{
						position646, tokenIndex646 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l647
						}
						position++
						goto l646
					l647:
						position, tokenIndex = position646, tokenIndex646
						if buffer[position] != rune('R') {
							goto l641
						}
						position++
					}
				l646:
					goto l620
				l641:
					position, tokenIndex = position620, tokenIndex620
					if !_rules[ruleARMVectorRegister]() {
						goto l648
					}
					goto l620
				l648:
					position, tokenIndex = position620, tokenIndex620
					if buffer[position] != rune('{') {
						goto l618
					}
					position++
					{
						position649, tokenIndex649 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l649
						}
						goto l650
					l649:
						position, tokenIndex = position649, tokenIndex649
					}
				l650:
					if !_rules[ruleARMVectorRegister]() {
						goto l618
					}
				l651:
					{
						position652, tokenIndex652 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l652
						}
						position++
						{
							position653, tokenIndex653 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l653
							}
							goto l654
						l653:
							position, tokenIndex = position653, tokenIndex653
						}
					l654:
						if !_rules[ruleARMVectorRegister]() {
							goto l652
						}
						goto l651
					l652:
						position, tokenIndex = position652, tokenIndex652
					}
					{
						position655, tokenIndex655 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l655
						}
						goto l656
					l655:
						position, tokenIndex = position655, tokenIndex655
					}
				l656:
					if buffer[position] != rune('}') {
						goto l618
					}
					position++
					{
						position657, tokenIndex657 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l657
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l657
						}
						position++
						if buffer[position] != rune(']') {
							goto l657
						}
						position++
						goto l658
					l657:
						position, tokenIndex = position657, tokenIndex657
					}
				l658:
				}
			l620:
				add(ruleARMRegister, position619)
			}
			return true
		l618:
			position, tokenIndex = position618, tokenIndex618
			return false
		},
		/* 39 ARMVectorRegister <- <(('v' / 'V') [0-9] [0-9]? ('.' [0-9]* ('b' / 's' / 'd' / 'h' / 'q') ('[' [0-9] [0-9]? ']')?)?)> */
		func() bool {
			position659, tokenIndex659 := position, tokenIndex
			{
				position660 := position
				{
					position661, tokenIndex661 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l662
					}
					position++
					goto l661
				l662:
					position, tokenIndex = position661, tokenIndex661
					if buffer[position] != rune('V') {
						goto l659
					}
					position++
				}
			l661:
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l659
				}
				position++
				{
					position663, tokenIndex663 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l663
					}
					position++
					goto l664
				l663:
					position, tokenIndex = position663, tokenIndex663
				}
			l664:
				{
					position665, tokenIndex665 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l665
					}
					position++
				l667:
					{
						position668, tokenIndex668 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l668
						}
						position++
						goto l667
					l668:
						position, tokenIndex = position668, tokenIndex668
					}
					{
						position669, tokenIndex669 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l670
						}
						position++
						goto l669
					l670:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('s') {
							goto l671
						}
						position++
						goto l669
					l671:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('d') {
							goto l672
						}
						position++
						goto l669
					l672:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('h') {
							goto l673
						}
						position++
						goto l669
					l673:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('q') {
							goto l665
						}
						position++
					}
				l669:
					{
						position674, tokenIndex674 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l674
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l674
						}
						position++
						{
							position676, tokenIndex676 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l676
							}
							position++
							goto l677
						l676:
							position, tokenIndex = position676, tokenIndex676
						}
					l677:
						if buffer[position] != rune(']') {
							goto l674
						}
						position++
						goto l675
					l674:
						position, tokenIndex = position674, tokenIndex674
					}
				l675:
					goto l666
				l665:
					position, tokenIndex = position665, tokenIndex665
				}
			l666:
				add(ruleARMVectorRegister, position660)
			}
			return true
		l659:
			position, tokenIndex = position659, tokenIndex659
			return false
		},
		/* 40 MemoryRef <- <((SymbolRef BaseIndexScale) / SymbolRef / Low12BitsSymbolRef / (Offset* BaseIndexScale) / (SegmentRegister Offset BaseIndexScale) / (SegmentRegister BaseIndexScale) / (SegmentRegister Offset) / ARMBaseIndexScale / ARMBaseIndexScale898 / BaseIndexScale)> */
		func() bool {
			position678, tokenIndex678 := position, tokenIndex
			{
				position679 := position
				{
					position680, tokenIndex680 := position, tokenIndex
					if !_rules[ruleSymbolRef]() {
						goto l681
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l681
					}
					goto l680
				l681:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleSymbolRef]() {
						goto l682
					}
					goto l680
				l682:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleLow12BitsSymbolRef]() {
						goto l683
					}
					goto l680
				l683:
					position, tokenIndex = position680, tokenIndex680
				l685:
					{
						position686, tokenIndex686 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l686
						}
						goto l685
					l686:
						position, tokenIndex = position686, tokenIndex686
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l684
					}
					goto l680
				l684:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleSegmentRegister]() {
						goto l687
					}
					if !_rules[ruleOffset]() {
						goto l687
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l687
					}
					goto l680
				l687:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleSegmentRegister]() {
						goto l688
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l688
					}
					goto l680
				l688:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleSegmentRegister]() {
						goto l689
					}
					if !_rules[ruleOffset]() {
						goto l689
					}
					goto l680
				l689:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleARMBaseIndexScale]() {
						goto l690
					}
					goto l680
				l690:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleARMBaseIndexScale898]() {
						goto l691
					}
					goto l680
				l691:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleBaseIndexScale]() {
						goto l678
					}
				}
			l680:
				add(ruleMemoryRef, position679)
			}
			return true
		l678:
			position, tokenIndex = position678, tokenIndex678
			return false
		},
		/* 41 SymbolRef <- <((Offset* '+')? (LocalSymbol / SymbolName) Offset* ('@' Section Offset*)?)> */
		func() bool {
			position692, tokenIndex692 := position, tokenIndex
			{
				position693 := position
				{
					position694, tokenIndex694 := position, tokenIndex
				l696:
					{
						position697, tokenIndex697 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l697
						}
						goto l696
					l697:
						position, tokenIndex = position697, tokenIndex697
					}
					if buffer[position] != rune('+') {
						goto l694
					}
					position++
					goto l695
				l694:
					position, tokenIndex = position694, tokenIndex694
				}
			l695:
				{
					position698, tokenIndex698 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l699
					}
					goto l698
				l699:
					position, tokenIndex = position698, tokenIndex698
					if !_rules[ruleSymbolName]() {
						goto l692
					}
				}
			l698:
			l700:
				{
					position701, tokenIndex701 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l701
					}
					goto l700
				l701:
					position, tokenIndex = position701, tokenIndex701
				}
				{
					position702, tokenIndex702 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l702
					}
					position++
					if !_rules[ruleSection]() {
						goto l702
					}
				l704:
					{
						position705, tokenIndex705 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l705
						}
						goto l704
					l705:
						position, tokenIndex = position705, tokenIndex705
					}
					goto l703
				l702:
					position, tokenIndex = position702, tokenIndex702
				}
			l703:
				add(ruleSymbolRef, position693)
			}
			return true
		l692:
			position, tokenIndex = position692, tokenIndex692
			return false
		},
		/* 42 Low12BitsSymbolRef <- <(':' ('l' / 'L') ('o' / 'O') '1' '2' ':' (LocalSymbol / SymbolName) Offset?)> */
		func() bool {
			position706, tokenIndex706 := position, tokenIndex
			{
				position707 := position
				if buffer[position] != rune(':') {
					goto l706
				}
				position++
				{
					position708, tokenIndex708 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l709
					}
					position++
					goto l708
				l709:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('L') {
						goto l706
					}
					position++
				}
			l708:
				{
					position710, tokenIndex710 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l711
					}
					position++
					goto l710
				l711:
					position, tokenIndex = position710, tokenIndex710
					if buffer[position] != rune('O') {
						goto l706
					}
					position++
				}
			l710:
				if buffer[position] != rune('1') {
					goto l706
				}
				position++
				if buffer[position] != rune('2') {
					goto l706
				}
				position++
				if buffer[position] != rune(':') {
					goto l706
				}
				position++
				{
					position712, tokenIndex712 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l713
					}
					goto l712
				l713:
					position, tokenIndex = position712, tokenIndex712
					if !_rules[ruleSymbolName]() {
						goto l706
					}
				}
			l712:
				{
					position714, tokenIndex714 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l714
					}
					goto l715
				l714:
					position, tokenIndex = position714, tokenIndex714
				}
			l715:
				add(ruleLow12BitsSymbolRef, position707)
			}
			return true
		l706:
			position, tokenIndex = position706, tokenIndex706
			return false
		},
		/* 43 ARMBaseIndexScale <- <('[' ARMRegister (',' WS? (('#' Offset (('*' [0-9]+) / ('*' Offset331) / Offset666*)?) / ARMGOTLow12 / Low12BitsSymbolRef / ARMRegister) (',' WS? ARMConstantTweak)?)? ']' ARMPostincrement?)> */
		func() bool {
			position716, tokenIndex716 := position, tokenIndex
			{
				position717 := position
				if buffer[position] != rune('[') {
					goto l716
				}
				position++
				if !_rules[ruleARMRegister]() {
					goto l716
				}
				{
					position718, tokenIndex718 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l718
					}
					position++
					{
						position720, tokenIndex720 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l720
						}
						goto l721
					l720:
						position, tokenIndex = position720, tokenIndex720
					}
				l721:
					{
						position722, tokenIndex722 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l723
						}
						position++
						if !_rules[ruleOffset]() {
							goto l723
						}
						{
							position724, tokenIndex724 := position, tokenIndex
							{
								position726, tokenIndex726 := position, tokenIndex
								if buffer[position] != rune('*') {
									goto l727
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l727
								}
								position++
							l728:
								{
									position729, tokenIndex729 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l729
									}
									position++
									goto l728
								l729:
									position, tokenIndex = position729, tokenIndex729
								}
								goto l726
							l727:
								position, tokenIndex = position726, tokenIndex726
								if buffer[position] != rune('*') {
									goto l730
								}
								position++
								if !_rules[ruleOffset331]() {
									goto l730
								}
								goto l726
							l730:
								position, tokenIndex = position726, tokenIndex726
							l731:
								{
									position732, tokenIndex732 := position, tokenIndex
									if !_rules[ruleOffset666]() {
										goto l732
									}
									goto l731
								l732:
									position, tokenIndex = position732, tokenIndex732
								}
							}
						l726:
							goto l725

							position, tokenIndex = position724, tokenIndex724
						}
					l725:
						goto l722
					l723:
						position, tokenIndex = position722, tokenIndex722
						if !_rules[ruleARMGOTLow12]() {
							goto l733
						}
						goto l722
					l733:
						position, tokenIndex = position722, tokenIndex722
						if !_rules[ruleLow12BitsSymbolRef]() {
							goto l734
						}
						goto l722
					l734:
						position, tokenIndex = position722, tokenIndex722
						if !_rules[ruleARMRegister]() {
							goto l718
						}
					}
				l722:
					{
						position735, tokenIndex735 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l735
						}
						position++
						{
							position737, tokenIndex737 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l737
							}
							goto l738
						l737:
							position, tokenIndex = position737, tokenIndex737
						}
					l738:
						if !_rules[ruleARMConstantTweak]() {
							goto l735
						}
						goto l736
					l735:
						position, tokenIndex = position735, tokenIndex735
					}
				l736:
					goto l719
				l718:
					position, tokenIndex = position718, tokenIndex718
				}
			l719:
				if buffer[position] != rune(']') {
					goto l716
				}
				position++
				{
					position739, tokenIndex739 := position, tokenIndex
					if !_rules[ruleARMPostincrement]() {
						goto l739
					}
					goto l740
				l739:
					position, tokenIndex = position739, tokenIndex739
				}
			l740:
				add(ruleARMBaseIndexScale, position717)
			}
			return true
		l716:
			position, tokenIndex = position716, tokenIndex716
			return false
		},
		/* 44 ARMBaseIndexScale898 <- <(('d' / 'D') ('s' / 'S') ('a' / 'A') ('f' / 'F') ('a' / 'A') ('s' / 'S') ('f' / 'F') ('d' / 'D') ('a' / 'A') ('s' / 'S') ('f' / 'F') ('a' / 'A') ('d' / 'D') ('s' / 'S'))> */
		func() bool {
			position741, tokenIndex741 := position, tokenIndex
			{
				position742 := position
				{
					position743, tokenIndex743 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l744
					}
					position++
					goto l743
				l744:
					position, tokenIndex = position743, tokenIndex743
					if buffer[position] != rune('D') {
						goto l741
					}
					position++
				}
			l743:
				{
					position745, tokenIndex745 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l746
					}
					position++
					goto l745
				l746:
					position, tokenIndex = position745, tokenIndex745
					if buffer[position] != rune('S') {
						goto l741
					}
					position++
				}
			l745:
				{
					position747, tokenIndex747 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l748
					}
					position++
					goto l747
				l748:
					position, tokenIndex = position747, tokenIndex747
					if buffer[position] != rune('A') {
						goto l741
					}
					position++
				}
			l747:
				{
					position749, tokenIndex749 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l750
					}
					position++
					goto l749
				l750:
					position, tokenIndex = position749, tokenIndex749
					if buffer[position] != rune('F') {
						goto l741
					}
					position++
				}
			l749:
				{
					position751, tokenIndex751 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l752
					}
					position++
					goto l751
				l752:
					position, tokenIndex = position751, tokenIndex751
					if buffer[position] != rune('A') {
						goto l741
					}
					position++
				}
			l751:
				{
					position753, tokenIndex753 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l754
					}
					position++
					goto l753
				l754:
					position, tokenIndex = position753, tokenIndex753
					if buffer[position] != rune('S') {
						goto l741
					}
					position++
				}
			l753:
				{
					position755, tokenIndex755 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l756
					}
					position++
					goto l755
				l756:
					position, tokenIndex = position755, tokenIndex755
					if buffer[position] != rune('F') {
						goto l741
					}
					position++
				}
			l755:
				{
					position757, tokenIndex757 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l758
					}
					position++
					goto l757
				l758:
					position, tokenIndex = position757, tokenIndex757
					if buffer[position] != rune('D') {
						goto l741
					}
					position++
				}
			l757:
				{
					position759, tokenIndex759 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l760
					}
					position++
					goto l759
				l760:
					position, tokenIndex = position759, tokenIndex759
					if buffer[position] != rune('A') {
						goto l741
					}
					position++
				}
			l759:
				{
					position761, tokenIndex761 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l762
					}
					position++
					goto l761
				l762:
					position, tokenIndex = position761, tokenIndex761
					if buffer[position] != rune('S') {
						goto l741
					}
					position++
				}
			l761:
				{
					position763, tokenIndex763 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l764
					}
					position++
					goto l763
				l764:
					position, tokenIndex = position763, tokenIndex763
					if buffer[position] != rune('F') {
						goto l741
					}
					position++
				}
			l763:
				{
					position765, tokenIndex765 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l766
					}
					position++
					goto l765
				l766:
					position, tokenIndex = position765, tokenIndex765
					if buffer[position] != rune('A') {
						goto l741
					}
					position++
				}
			l765:
				{
					position767, tokenIndex767 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l768
					}
					position++
					goto l767
				l768:
					position, tokenIndex = position767, tokenIndex767
					if buffer[position] != rune('D') {
						goto l741
					}
					position++
				}
			l767:
				{
					position769, tokenIndex769 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l770
					}
					position++
					goto l769
				l770:
					position, tokenIndex = position769, tokenIndex769
					if buffer[position] != rune('S') {
						goto l741
					}
					position++
				}
			l769:
				add(ruleARMBaseIndexScale898, position742)
			}
			return true
		l741:
			position, tokenIndex = position741, tokenIndex741
			return false
		},
		/* 45 Offset331 <- <('(' [0-9]+ Operator [0-9]+ ')')> */
		func() bool {
			position771, tokenIndex771 := position, tokenIndex
			{
				position772 := position
				if buffer[position] != rune('(') {
					goto l771
				}
				position++
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l771
				}
				position++
			l773:
				{
					position774, tokenIndex774 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l774
					}
					position++
					goto l773
				l774:
					position, tokenIndex = position774, tokenIndex774
				}
				if !_rules[ruleOperator]() {
					goto l771
				}
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l771
				}
				position++
			l775:
				{
					position776, tokenIndex776 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l776
					}
					position++
					goto l775
				l776:
					position, tokenIndex = position776, tokenIndex776
				}
				if buffer[position] != rune(')') {
					goto l771
				}
				position++
				add(ruleOffset331, position772)
			}
			return true
		l771:
			position, tokenIndex = position771, tokenIndex771
			return false
		},
		/* 46 Offset666 <- <('+' [0-9]+)> */
		func() bool {
			position777, tokenIndex777 := position, tokenIndex
			{
				position778 := position
				if buffer[position] != rune('+') {
					goto l777
				}
				position++
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l777
				}
				position++
			l779:
				{
					position780, tokenIndex780 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l780
					}
					position++
					goto l779
				l780:
					position, tokenIndex = position780, tokenIndex780
				}
				add(ruleOffset666, position778)
			}
			return true
		l777:
			position, tokenIndex = position777, tokenIndex777
			return false
		},
		/* 47 ARMGOTLow12 <- <(':' ('g' / 'G') ('o' / 'O') ('t' / 'T') '_' ('l' / 'L') ('o' / 'O') '1' '2' ':' SymbolName)> */
		func() bool {
			position781, tokenIndex781 := position, tokenIndex
			{
				position782 := position
				if buffer[position] != rune(':') {
					goto l781
				}
				position++
				{
					position783, tokenIndex783 := position, tokenIndex
					if buffer[position] != rune('g') {
						goto l784
					}
					position++
					goto l783
				l784:
					position, tokenIndex = position783, tokenIndex783
					if buffer[position] != rune('G') {
						goto l781
					}
					position++
				}
			l783:
				{
					position785, tokenIndex785 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l786
					}
					position++
					goto l785
				l786:
					position, tokenIndex = position785, tokenIndex785
					if buffer[position] != rune('O') {
						goto l781
					}
					position++
				}
			l785:
				{
					position787, tokenIndex787 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l788
					}
					position++
					goto l787
				l788:
					position, tokenIndex = position787, tokenIndex787
					if buffer[position] != rune('T') {
						goto l781
					}
					position++
				}
			l787:
				if buffer[position] != rune('_') {
					goto l781
				}
				position++
				{
					position789, tokenIndex789 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l790
					}
					position++
					goto l789
				l790:
					position, tokenIndex = position789, tokenIndex789
					if buffer[position] != rune('L') {
						goto l781
					}
					position++
				}
			l789:
				{
					position791, tokenIndex791 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l792
					}
					position++
					goto l791
				l792:
					position, tokenIndex = position791, tokenIndex791
					if buffer[position] != rune('O') {
						goto l781
					}
					position++
				}
			l791:
				if buffer[position] != rune('1') {
					goto l781
				}
				position++
				if buffer[position] != rune('2') {
					goto l781
				}
				position++
				if buffer[position] != rune(':') {
					goto l781
				}
				position++
				if !_rules[ruleSymbolName]() {
					goto l781
				}
				add(ruleARMGOTLow12, position782)
			}
			return true
		l781:
			position, tokenIndex = position781, tokenIndex781
			return false
		},
		/* 48 ARMPostincrement <- <'!'> */
		func() bool {
			position793, tokenIndex793 := position, tokenIndex
			{
				position794 := position
				if buffer[position] != rune('!') {
					goto l793
				}
				position++
				add(ruleARMPostincrement, position794)
			}
			return true
		l793:
			position, tokenIndex = position793, tokenIndex793
			return false
		},
		/* 49 BaseIndexScale <- <('(' RegisterOrConstant? WS? (',' WS? RegisterOrConstant WS? (',' [0-9]+)?)? ')')> */
		func() bool {
			position795, tokenIndex795 := position, tokenIndex
			{
				position796 := position
				if buffer[position] != rune('(') {
					goto l795
				}
				position++
				{
					position797, tokenIndex797 := position, tokenIndex
					if !_rules[ruleRegisterOrConstant]() {
						goto l797
					}
					goto l798
				l797:
					position, tokenIndex = position797, tokenIndex797
				}
			l798:
				{
					position799, tokenIndex799 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l799
					}
					goto l800
				l799:
					position, tokenIndex = position799, tokenIndex799
				}
			l800:
				{
					position801, tokenIndex801 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l801
					}
					position++
					{
						position803, tokenIndex803 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l803
						}
						goto l804
					l803:
						position, tokenIndex = position803, tokenIndex803
					}
				l804:
					if !_rules[ruleRegisterOrConstant]() {
						goto l801
					}
					{
						position805, tokenIndex805 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l805
						}
						goto l806
					l805:
						position, tokenIndex = position805, tokenIndex805
					}
				l806:
					{
						position807, tokenIndex807 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l807
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l807
						}
						position++
					l809:
						{
							position810, tokenIndex810 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l810
							}
							position++
							goto l809
						l810:
							position, tokenIndex = position810, tokenIndex810
						}
						goto l808
					l807:
						position, tokenIndex = position807, tokenIndex807
					}
				l808:
					goto l802
				l801:
					position, tokenIndex = position801, tokenIndex801
				}
			l802:
				if buffer[position] != rune(')') {
					goto l795
				}
				position++
				add(ruleBaseIndexScale, position796)
			}
			return true
		l795:
			position, tokenIndex = position795, tokenIndex795
			return false
		},
		/* 50 Operator <- <('+' / '-')> */
		func() bool {
			position811, tokenIndex811 := position, tokenIndex
			{
				position812 := position
				{
					position813, tokenIndex813 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l814
					}
					position++
					goto l813
				l814:
					position, tokenIndex = position813, tokenIndex813
					if buffer[position] != rune('-') {
						goto l811
					}
					position++
				}
			l813:
				add(ruleOperator, position812)
			}
			return true
		l811:
			position, tokenIndex = position811, tokenIndex811
			return false
		},
		/* 51 Offset <- <('+'? '-'? (('0' ('b' / 'B') ('0' / '1')+) / ('0' ('x' / 'X') ([0-9] / [0-9] / ([a-f] / [A-F]))+) / [0-9]+))> */
		func() bool {
			position815, tokenIndex815 := position, tokenIndex
			{
				position816 := position
				{
					position817, tokenIndex817 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l817
					}
					position++
					goto l818
				l817:
					position, tokenIndex = position817, tokenIndex817
				}
			l818:
				{
					position819, tokenIndex819 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l819
					}
					position++
					goto l820
				l819:
					position, tokenIndex = position819, tokenIndex819
				}
			l820:
				{
					position821, tokenIndex821 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l822
					}
					position++
					{
						position823, tokenIndex823 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l824
						}
						position++
						goto l823
					l824:
						position, tokenIndex = position823, tokenIndex823
						if buffer[position] != rune('B') {
							goto l822
						}
						position++
					}
				l823:
					{
						position827, tokenIndex827 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l828
						}
						position++
						goto l827
					l828:
						position, tokenIndex = position827, tokenIndex827
						if buffer[position] != rune('1') {
							goto l822
						}
						position++
					}
				l827:
				l825:
					{
						position826, tokenIndex826 := position, tokenIndex
						{
							position829, tokenIndex829 := position, tokenIndex
							if buffer[position] != rune('0') {
								goto l830
							}
							position++
							goto l829
						l830:
							position, tokenIndex = position829, tokenIndex829
							if buffer[position] != rune('1') {
								goto l826
							}
							position++
						}
					l829:
						goto l825
					l826:
						position, tokenIndex = position826, tokenIndex826
					}
					goto l821
				l822:
					position, tokenIndex = position821, tokenIndex821
					if buffer[position] != rune('0') {
						goto l831
					}
					position++
					{
						position832, tokenIndex832 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l833
						}
						position++
						goto l832
					l833:
						position, tokenIndex = position832, tokenIndex832
						if buffer[position] != rune('X') {
							goto l831
						}
						position++
					}
				l832:
					{
						position836, tokenIndex836 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l837
						}
						position++
						goto l836
					l837:
						position, tokenIndex = position836, tokenIndex836
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l838
						}
						position++
						goto l836
					l838:
						position, tokenIndex = position836, tokenIndex836
						{
							position839, tokenIndex839 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l840
							}
							position++
							goto l839
						l840:
							position, tokenIndex = position839, tokenIndex839
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l831
							}
							position++
						}
					l839:
					}
				l836:
				l834:
					{
						position835, tokenIndex835 := position, tokenIndex
						{
							position841, tokenIndex841 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l842
							}
							position++
							goto l841
						l842:
							position, tokenIndex = position841, tokenIndex841
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l843
							}
							position++
							goto l841
						l843:
							position, tokenIndex = position841, tokenIndex841
							{
								position844, tokenIndex844 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l845
								}
								position++
								goto l844
							l845:
								position, tokenIndex = position844, tokenIndex844
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l835
								}
								position++
							}
						l844:
						}
					l841:
						goto l834
					l835:
						position, tokenIndex = position835, tokenIndex835
					}
					goto l821
				l831:
					position, tokenIndex = position821, tokenIndex821
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l815
					}
					position++
				l846:
					{
						position847, tokenIndex847 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l847
						}
						position++
						goto l846
					l847:
						position, tokenIndex = position847, tokenIndex847
					}
				}
			l821:
				add(ruleOffset, position816)
			}
			return true
		l815:
			position, tokenIndex = position815, tokenIndex815
			return false
		},
		/* 52 Section <- <([a-z] / [A-Z] / '@')+> */
		func() bool {
			position848, tokenIndex848 := position, tokenIndex
			{
				position849 := position
				{
					position852, tokenIndex852 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l853
					}
					position++
					goto l852
				l853:
					position, tokenIndex = position852, tokenIndex852
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l854
					}
					position++
					goto l852
				l854:
					position, tokenIndex = position852, tokenIndex852
					if buffer[position] != rune('@') {
						goto l848
					}
					position++
				}
			l852:
			l850:
				{
					position851, tokenIndex851 := position, tokenIndex
					{
						position855, tokenIndex855 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l856
						}
						position++
						goto l855
					l856:
						position, tokenIndex = position855, tokenIndex855
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l857
						}
						position++
						goto l855
					l857:
						position, tokenIndex = position855, tokenIndex855
						if buffer[position] != rune('@') {
							goto l851
						}
						position++
					}
				l855:
					goto l850
				l851:
					position, tokenIndex = position851, tokenIndex851
				}
				add(ruleSection, position849)
			}
			return true
		l848:
			position, tokenIndex = position848, tokenIndex848
			return false
		},
		/* 53 SegmentRegister <- <('%' ([c-g] / 's') ('s' ':'))> */
		func() bool {
			position858, tokenIndex858 := position, tokenIndex
			{
				position859 := position
				if buffer[position] != rune('%') {
					goto l858
				}
				position++
				{
					position860, tokenIndex860 := position, tokenIndex
					if c := buffer[position]; c < rune('c') || c > rune('g') {
						goto l861
					}
					position++
					goto l860
				l861:
					position, tokenIndex = position860, tokenIndex860
					if buffer[position] != rune('s') {
						goto l858
					}
					position++
				}
			l860:
				if buffer[position] != rune('s') {
					goto l858
				}
				position++
				if buffer[position] != rune(':') {
					goto l858
				}
				position++
				add(ruleSegmentRegister, position859)
			}
			return true
		l858:
			position, tokenIndex = position858, tokenIndex858
			return false
		},
	}
	p.rules = _rules
	return nil
}
